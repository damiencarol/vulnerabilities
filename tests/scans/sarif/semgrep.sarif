{
    "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
    "version": "2.1.0",
    "runs": [
        {
            "tool": {
                "driver": {
                    "name": "semgrep",
                    "semanticVersion": "0.46.0",
                    "rules": [
                        {
                            "id": "ruby.lang.security.missing-csrf-protection.missing-csrf-protection",
                            "name": "ruby.lang.security.missing-csrf-protection.missing-csrf-protection",
                            "shortDescription": {
                                "text": "Detected controller which does not enable cross-site request forgery\nprotections using 'protect_from_forgery'. Add\n'protect_from_forgery :with => :exception' to your controller class.\n"
                            },
                            "fullDescription": {
                                "text": "Detected controller which does not enable cross-site request forgery\nprotections using 'protect_from_forgery'. Add\n'protect_from_forgery :with => :exception' to your controller class.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-352: Cross-Site Request Forgery (CSRF)",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.network.bind.avoid-bind-to-all-interfaces",
                            "name": "python.lang.security.audit.network.bind.avoid-bind-to-all-interfaces",
                            "shortDescription": {
                                "text": "Running `socket.bind` to 0.0.0.0, ::, or empty string could unexpectedly\nexpose the server publicly as it binds to all available interfaces. Consider\ninstead getting correct address from an environment variable or\nconfiguration file.\n"
                            },
                            "fullDescription": {
                                "text": "Running `socket.bind` to 0.0.0.0, ::, or empty string could unexpectedly\nexpose the server publicly as it binds to all available interfaces. Consider\ninstead getting correct address from an environment variable or\nconfiguration file.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.missing-ssl-version.missing-ssl-version",
                            "name": "generic.nginx.security.missing-ssl-version.missing-ssl-version",
                            "shortDescription": {
                                "text": "This server configuration is missing the 'ssl_protocols' directive. By default, this server will use 'ssl_protocols TLSv1 TLSv1.1 TLSv1.2', and versions older than TLSv1.2 are known to be broken. Explicitly specify 'ssl_protocols TLSv1.2 TLSv1.3' to use secure TLS versions."
                            },
                            "fullDescription": {
                                "text": "This server configuration is missing the 'ssl_protocols' directive. By default, this server will use 'ssl_protocols TLSv1 TLSv1.1 TLSv1.2', and versions older than TLSv1.2 are known to be broken. Explicitly specify 'ssl_protocols TLSv1.2 TLSv1.3' to use secure TLS versions."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
                            "name": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
                            "shortDescription": {
                                "text": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST')."
                            },
                            "fullDescription": {
                                "text": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST')."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-352: Cross-Site Request Forgery (CSRF)",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.no-send.bad-send",
                            "name": "ruby.lang.security.no-send.bad-send",
                            "shortDescription": {
                                "text": "Checks for unsafe use of Object#send, try, __send__, and public_send. These only account for unsafe\nuse of a method, not target. This can lead to arbitrary calling of exit, along with arbitrary code     execution.\nPlease be sure to sanitize input in order to avoid this.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for unsafe use of Object#send, try, __send__, and public_send. These only account for unsafe\nuse of a method, not target. This can lead to arbitrary calling of exit, along with arbitrary code     execution.\nPlease be sure to sanitize input in order to avoid this.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_DEBUG",
                            "name": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_DEBUG",
                            "shortDescription": {
                                "text": "Hardcoded variable `DEBUG` detected. Set this by using FLASK_DEBUG environment variable"
                            },
                            "fullDescription": {
                                "text": "Hardcoded variable `DEBUG` detected. Set this by using FLASK_DEBUG environment variable"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-489: Active Debug Code",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.sqlalchemy.security.sqlalchemy-sql-injection.sqlalchemy-sql-injection",
                            "name": "python.sqlalchemy.security.sqlalchemy-sql-injection.sqlalchemy-sql-injection",
                            "shortDescription": {
                                "text": "Distinct, Having, Group_by, Order_by, and Filter in SQLAlchemy can cause sql injections\nif the developer inputs raw SQL into the before-mentioned clauses.\nThis pattern captures relevant cases in which the developer inputs raw SQL into the distinct, having, group_by, order_by or filter clauses and\ninjects user-input into the raw SQL with any function besides \"bindparams\". Use bindParams to securely bind user-input\nto SQL statements.\n"
                            },
                            "fullDescription": {
                                "text": "Distinct, Having, Group_by, Order_by, and Filter in SQLAlchemy can cause sql injections\nif the developer inputs raw SQL into the before-mentioned clauses.\nThis pattern captures relevant cases in which the developer inputs raw SQL into the distinct, having, group_by, order_by or filter clauses and\ninjects user-input into the raw SQL with any function besides \"bindparams\". Use bindParams to securely bind user-input\nto SQL statements.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "html.security.missing-noopener.missing-noopener",
                            "name": "html.security.missing-noopener.missing-noopener",
                            "shortDescription": {
                                "text": "This anchor tag with 'target=\"_blank\"' is missing 'noopener'. A page opened with 'target=\"_blank\"' can access the window object of the origin page. This means it can manipulate the 'window.opener' property, which could redirect the origin page to a malicious URL. This is called reverse tabnabbing. To prevent this, include 'rel=noopener' on this tag"
                            },
                            "fullDescription": {
                                "text": "This anchor tag with 'target=\"_blank\"' is missing 'noopener'. A page opened with 'target=\"_blank\"' can access the window object of the origin page. This means it can manipulate the 'window.opener' property, which could redirect the origin page to a malicious URL. This is called reverse tabnabbing. To prevent this, include 'rel=noopener' on this tag"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.django.security.audit.xss.template-translate-no-escape.template-translate-no-escape",
                            "name": "python.django.security.audit.xss.template-translate-no-escape.template-translate-no-escape",
                            "shortDescription": {
                                "text": "Translated strings will not be escaped when rendered in a template.\nThis leads to a vulnerability where translators could include malicious script tags in their translations.\nConsider using `force_escape` to explicitly escape a transalted text.\n"
                            },
                            "fullDescription": {
                                "text": "Translated strings will not be escaped when rendered in a template.\nThis leads to a vulnerability where translators could include malicious script tags in their translations.\nConsider using `force_escape` to explicitly escape a transalted text.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.pprof.pprof-debug-exposure",
                            "name": "go.lang.security.audit.net.pprof.pprof-debug-exposure",
                            "shortDescription": {
                                "text": "The profiling 'pprof' endpoint is automatically exposed on /debug/pprof.\nThis could leak information about the server.\nInstead, use `import \"net/http/pprof\"`. See\nhttps://www.farsightsecurity.com/blog/txt-record/go-remote-profiling-20161028/\nfor more information and mitigation.\n"
                            },
                            "fullDescription": {
                                "text": "The profiling 'pprof' endpoint is automatically exposed on /debug/pprof.\nThis could leak information about the server.\nInstead, use `import \"net/http/pprof\"`. See\nhttps://www.farsightsecurity.com/blog/txt-record/go-remote-profiling-20161028/\nfor more information and mitigation.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-489: Active Debug Code",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.double-free.double-free",
                            "name": "c.lang.security.double-free.double-free",
                            "shortDescription": {
                                "text": "Variable '$VAR' was freed twice. This can lead to undefined behavior.\n"
                            },
                            "fullDescription": {
                                "text": "Variable '$VAR' was freed twice. This can lead to undefined behavior.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "javascript.jose.security.jwt-none-alg.jwt-none-alg",
                            "name": "javascript.jose.security.jwt-none-alg.jwt-none-alg",
                            "shortDescription": {
                                "text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"
                            },
                            "fullDescription": {
                                "text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "java.jax-rs.security.jax-rs-path-traversal.jax-rs-path-traversal",
                            "name": "java.jax-rs.security.jax-rs-path-traversal.jax-rs-path-traversal",
                            "shortDescription": {
                                "text": "Detected a potential path traversal. A malicious actor\ncould control the location of this file, to include going backwards\nin the directory with '../'. To address this, ensure that user-controlled\nvariables in file paths are sanitized. You may aslso consider using a utility\nmethod such as org.apache.commons.io.FilenameUtils.getName(...) to only\nretrieve the file name from the path.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a potential path traversal. A malicious actor\ncould control the location of this file, to include going backwards\nin the directory with '../'. To address this, ensure that user-controlled\nvariables in file paths are sanitized. You may aslso consider using a utility\nmethod such as org.apache.commons.io.FilenameUtils.getName(...) to only\nretrieve the file name from the path.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.reflect-makefunc.reflect-makefunc",
                            "name": "go.lang.security.audit.reflect-makefunc.reflect-makefunc",
                            "shortDescription": {
                                "text": "'reflect.MakeFunc' detected. This will sidestep protections that are\nnormally afforded by Go's type system. Audit this call and be sure that\nuser input cannot be used to affect the code generated by MakeFunc;\notherwise, you will have a serious security vulnerability.\n"
                            },
                            "fullDescription": {
                                "text": "'reflect.MakeFunc' detected. This will sidestep protections that are\nnormally afforded by Go's type system. Audit this call and be sure that\nuser input cannot be used to affect the code generated by MakeFunc;\notherwise, you will have a serious security vulnerability.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-913: Improper Control of Dynamically-Managed Code Resources",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.raw-query.avoid-raw-sql",
                            "name": "python.django.security.audit.raw-query.avoid-raw-sql",
                            "shortDescription": {
                                "text": "You should be very careful whenever you write raw SQL. Consider using Django ORM before raw SQL. See https://docs.djangoproject.com/en/3.0/topics/db/sql/#passing-parameters-into-raw"
                            },
                            "fullDescription": {
                                "text": "You should be very careful whenever you write raw SQL. Consider using Django ORM before raw SQL. See https://docs.djangoproject.com/en/3.0/topics/db/sql/#passing-parameters-into-raw"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.injection.user-eval.eval-injection",
                            "name": "python.flask.security.injection.user-eval.eval-injection",
                            "shortDescription": {
                                "text": "Detected user data flowing into eval. This is code injection and should be avoided."
                            },
                            "fullDescription": {
                                "text": "Detected user data flowing into eval. This is code injection and should be avoided."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.jdbc-sql-formatted-string.jdbc-sql-formatted-string",
                            "name": "java.lang.security.audit.jdbc-sql-formatted-string.jdbc-sql-formatted-string",
                            "shortDescription": {
                                "text": "Possible JDBC injection detected. Use the parameterized query\nfeature available in queryForObject instead of concatenating or formatting strings:\n'jdbc.queryForObject(\"select * from table where name = ?\", Integer.class, parameterName);'\n"
                            },
                            "fullDescription": {
                                "text": "Possible JDBC injection detected. Use the parameterized query\nfeature available in queryForObject instead of concatenating or formatting strings:\n'jdbc.queryForObject(\"select * from table where name = ?\", Integer.class, parameterName);'\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.xss.template-blocktranslate-no-escape.template-blocktranslate-no-escape",
                            "name": "python.django.security.audit.xss.template-blocktranslate-no-escape.template-blocktranslate-no-escape",
                            "shortDescription": {
                                "text": "Translated strings will not be escaped when rendered in a template.\nThis leads to a vulnerability where translators could include malicious script tags in their translations.\nConsider using `force_escape` to explicitly escape a translated text.\n"
                            },
                            "fullDescription": {
                                "text": "Translated strings will not be escaped when rendered in a template.\nThis leads to a vulnerability where translators could include malicious script tags in their translations.\nConsider using `force_escape` to explicitly escape a translated text.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.cryptography.security.insufficient-ec-key-size.insufficient-ec-key-size",
                            "name": "python.cryptography.security.insufficient-ec-key-size.insufficient-ec-key-size",
                            "shortDescription": {
                                "text": "Detected an insufficient curve size for EC. NIST recommends\na key size of 224 or higher. For example, use 'ec.SECP256R1'.\n"
                            },
                            "fullDescription": {
                                "text": "Detected an insufficient curve size for EC. NIST recommends\na key size of 224 or higher. For example, use 'ec.SECP256R1'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.paramiko.paramiko-exec-command.paramiko-exec-command",
                            "name": "python.lang.security.audit.paramiko.paramiko-exec-command.paramiko-exec-command",
                            "shortDescription": {
                                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
                            },
                            "fullDescription": {
                                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.timing-attack.timing-attack",
                            "name": "ruby.lang.security.timing-attack.timing-attack",
                            "shortDescription": {
                                "text": "Checks for unsafe use of method http_basic_authenticate_with, which is vulnerable to timing attacks as it\ndoes not use constant-time checking when comparing passwords. Affected Rails versions include:\n5.0.0.beta1.1, 4.2.5.1, 4.1.14.1, 3.2.22.1. Avoid this function if possible.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for unsafe use of method http_basic_authenticate_with, which is vulnerable to timing attacks as it\ndoes not use constant-time checking when comparing passwords. Affected Rails versions include:\n5.0.0.beta1.1, 4.2.5.1, 4.1.14.1, 3.2.22.1. Avoid this function if possible.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "terraform.lang.security.eks-public-endpoint-enabled.eks-public-endpoint-enabled",
                            "name": "terraform.lang.security.eks-public-endpoint-enabled.eks-public-endpoint-enabled",
                            "shortDescription": {
                                "text": "The vpc_config resource inside the eks cluster has not explicitly disabled public endpoint access\n"
                            },
                            "fullDescription": {
                                "text": "The vpc_config resource inside the eks cluster has not explicitly disabled public endpoint access\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.django.security.audit.xss.global-autoescape-off.global-autoescape-off",
                            "name": "python.django.security.audit.xss.global-autoescape-off.global-autoescape-off",
                            "shortDescription": {
                                "text": "Autoescape is globally disbaled for this Django application. If you are\nrendering any web pages, this exposes your application to cross-site\nscripting (XSS) vulnerabilities. Remove 'autoescape: False' or set it\nto 'True'.\n"
                            },
                            "fullDescription": {
                                "text": "Autoescape is globally disbaled for this Django application. If you are\nrendering any web pages, this exposes your application to cross-site\nscripting (XSS) vulnerabilities. Remove 'autoescape: False' or set it\nto 'True'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.injection.code.globals-misuse-code-execution.globals-misuse-code-execution",
                            "name": "python.django.security.injection.code.globals-misuse-code-execution.globals-misuse-code-execution",
                            "shortDescription": {
                                "text": "Found request data as an index to 'globals()'. This is extremely\ndangerous because it allows an attacker to execute arbitrary code\non the system. Refactor your code not to use 'globals()'.\n"
                            },
                            "fullDescription": {
                                "text": "Found request data as an index to 'globals()'. This is extremely\ndangerous because it allows an attacker to execute arbitrary code\non the system. Refactor your code not to use 'globals()'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.insecure-use-strcat-fn.insecure-use-strcat-fn",
                            "name": "c.lang.security.insecure-use-strcat-fn.insecure-use-strcat-fn",
                            "shortDescription": {
                                "text": "Finding triggers whenever there is a strcat or strncat used.\nThis is an issue because strcat or strncat can lead to buffer overflow vulns.\nFix this by using strcat_s instead.\n"
                            },
                            "fullDescription": {
                                "text": "Finding triggers whenever there is a strcat or strncat used.\nThis is an issue because strcat or strncat can lead to buffer overflow vulns.\nFix this by using strcat_s instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load",
                            "name": "python.lang.security.deserialization.avoid-pyyaml-load.avoid-pyyaml-load",
                            "shortDescription": {
                                "text": "Avoid using `load()`. `PyYAML.load` can create arbitrary Python\nobjects. A malicious actor could exploit this to run arbitrary\ncode. Use `safe_load()` instead.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using `load()`. `PyYAML.load` can create arbitrary Python\nobjects. A malicious actor could exploit this to run arbitrary\ncode. Use `safe_load()` instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.detect-buffer-noassert.detect-buffer-noassert",
                            "name": "javascript.lang.security.detect-buffer-noassert.detect-buffer-noassert",
                            "shortDescription": {
                                "text": "Detected usage of noassert in Buffer API, which allows the offset the be beyond the\nend of the buffer. This could result in writing or reading beyond the end of the buffer.\n"
                            },
                            "fullDescription": {
                                "text": "Detected usage of noassert in Buffer API, which allows the offset the be beyond the\nend of the buffer. This could result in writing or reading beyond the end of the buffer.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_TESTING",
                            "name": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_TESTING",
                            "shortDescription": {
                                "text": "Hardcoded variable `TESTING` detected. Use environment variables or config files instead"
                            },
                            "fullDescription": {
                                "text": "Hardcoded variable `TESTING` detected. Use environment variables or config files instead"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-489: Active Debug Code",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.tls.tls-with-insecure-cipher",
                            "name": "go.lang.security.audit.crypto.tls.tls-with-insecure-cipher",
                            "shortDescription": {
                                "text": "Detected an insecure CipherSuite via the 'tls' module. This suite is considered weak.\nUse the function 'tls.CipherSuites()' to get a list of good cipher suites.\nSee https://golang.org/pkg/crypto/tls/#InsecureCipherSuites\nfor why and what other cipher suites to use.\n"
                            },
                            "fullDescription": {
                                "text": "Detected an insecure CipherSuite via the 'tls' module. This suite is considered weak.\nUse the function 'tls.CipherSuites()' to get a list of good cipher suites.\nSee https://golang.org/pkg/crypto/tls/#InsecureCipherSuites\nfor why and what other cipher suites to use.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.xss.template-translate-as-no-escape.template-translate-as-no-escape",
                            "name": "python.django.security.audit.xss.template-translate-as-no-escape.template-translate-as-no-escape",
                            "shortDescription": {
                                "text": "Translated strings will not be escaped when rendered in a template.\nThis leads to a vulnerability where translators could include malicious script tags in their translations.\nConsider using `force_escape` to explicitly escape a transalted text.\n"
                            },
                            "fullDescription": {
                                "text": "Translated strings will not be escaped when rendered in a template.\nThis leads to a vulnerability where translators could include malicious script tags in their translations.\nConsider using `force_escape` to explicitly escape a transalted text.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.mass-assignment-protection-disabled.mass-assignment-protection-disabled",
                            "name": "ruby.lang.security.mass-assignment-protection-disabled.mass-assignment-protection-disabled",
                            "shortDescription": {
                                "text": "Mass assignment protection disabled for '$MODEL'. This could\npermit assignment to sensitive model fields without intention. Instead,\nuse 'attr_accessible' for the model or disable mass assigment using\n'config.active_record.whitelist_attributes = true'.\n':without_protection => true' must be removed for this to take effect.\n"
                            },
                            "fullDescription": {
                                "text": "Mass assignment protection disabled for '$MODEL'. This could\npermit assignment to sensitive model fields without intention. Instead,\nuse 'attr_accessible' for the model or disable mass assigment using\n'config.active_record.whitelist_attributes = true'.\n':without_protection => true' must be removed for this to take effect.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.spawn-git-clone.spawn-git-clone",
                            "name": "javascript.lang.security.spawn-git-clone.spawn-git-clone",
                            "shortDescription": {
                                "text": "Git allows shell commands to be specified in ext URLs for remote repositories.\nFor example, git clone 'ext::sh -c whoami% >&2' will execute the whoami command to try to connect to a remote repository.\nMake sure that the URL is not controlled by external input.\n"
                            },
                            "fullDescription": {
                                "text": "Git allows shell commands to be specified in ext URLs for remote repositories.\nFor example, git clone 'ext::sh -c whoami% >&2' will execute the whoami command to try to connect to a remote repository.\nMake sure that the URL is not controlled by external input.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission",
                            "name": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission",
                            "shortDescription": {
                                "text": "It is generally a bad practices to set overly permissive file permission such as read+write+exec for all users.\nIf the file affected is a configuration, a binary, a script or sensitive data, it can lead to privilege escalation or information leakage.\n"
                            },
                            "fullDescription": {
                                "text": "It is generally a bad practices to set overly permissive file permission such as read+write+exec for all users.\nIf the file affected is a configuration, a binary, a script or sensitive data, it can lead to privilege escalation or information leakage.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-276: Incorrect Default Permissions",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.debug-enabled.debug-enabled",
                            "name": "python.flask.security.audit.debug-enabled.debug-enabled",
                            "shortDescription": {
                                "text": "Detected Flask app with debug=True. Do not deploy to production with this flag enabled\nas it will leak sensitive information. Instead, consider using Flask configuration\nvariables or setting 'debug' using system environment variables.\n"
                            },
                            "fullDescription": {
                                "text": "Detected Flask app with debug=True. Do not deploy to production with this flag enabled\nas it will leak sensitive information. Instead, consider using Flask configuration\nvariables or setting 'debug' using system environment variables.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-489: Active Debug Code",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
                            "name": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
                            "shortDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "javascript.sax.security.audit.sax-xxe.sax-xxe",
                            "name": "javascript.sax.security.audit.sax-xxe.sax-xxe",
                            "shortDescription": {
                                "text": "Use of 'ondoctype' in 'sax' library detected. By default, 'sax'\nwon't do anything with custom DTD entity definitions. If you're\nimplementing a custom DTD entity definition, be sure not to introduce\nXML External Entity (XXE) vulnerabilities, or be absolutely sure that\nexternal entities received from a trusted source while processing XML.\n"
                            },
                            "fullDescription": {
                                "text": "Use of 'ondoctype' in 'sax' library detected. By default, 'sax'\nwon't do anything with custom DTD entity definitions. If you're\nimplementing a custom DTD entity definition, be sure not to introduce\nXML External Entity (XXE) vulnerabilities, or be absolutely sure that\nexternal entities received from a trusted source while processing XML.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-611: Improper Restriction of XML External Entity Reference",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.use-defused-xmlrpc.use-defused-xmlrpc",
                            "name": "python.lang.security.use-defused-xmlrpc.use-defused-xmlrpc",
                            "shortDescription": {
                                "text": "Detected use of xmlrpc. xmlrpc is not inherently safe from vulnerabilities.\nUse defusedxml.xmlrpc instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected use of xmlrpc. xmlrpc is not inherently safe from vulnerabilities.\nUse defusedxml.xmlrpc instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-776: Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "terraform.lang.security.s3-public-rw-bucket.s3-public-rw-bucket",
                            "name": "terraform.lang.security.s3-public-rw-bucket.s3-public-rw-bucket",
                            "shortDescription": {
                                "text": "S3 bucket with public read-write access detected."
                            },
                            "fullDescription": {
                                "text": "S3 bucket with public read-write access detected."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.flask.security.unsanitized-input.response-contains-unsanitized-input",
                            "name": "python.flask.security.unsanitized-input.response-contains-unsanitized-input",
                            "shortDescription": {
                                "text": "Flask response reflects unsanitized user input. This could lead to a\ncross-site scripting vulnerability (https://owasp.org/www-community/attacks/xss/)\nin which an attacker causes arbitrary code to be executed in the user's browser.\nTo prevent, please sanitize the user input, e.g. by rendering the response\nin a Jinja2 template (see considerations in https://flask.palletsprojects.com/en/1.0.x/security/).\n"
                            },
                            "fullDescription": {
                                "text": "Flask response reflects unsanitized user input. This could lead to a\ncross-site scripting vulnerability (https://owasp.org/www-community/attacks/xss/)\nin which an attacker causes arbitrary code to be executed in the user's browser.\nTo prevent, please sanitize the user input, e.g. by rendering the response\nin a Jinja2 template (see considerations in https://flask.palletsprojects.com/en/1.0.x/security/).\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-Site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.query-set-extra.avoid-query-set-extra",
                            "name": "python.django.security.audit.query-set-extra.avoid-query-set-extra",
                            "shortDescription": {
                                "text": "This is a last resort. You should be careful when using QuerySet.extra due to SQLi https://docs.djangoproject.com/en/3.0/ref/models/querysets/#django.db.models.query.QuerySet.extra"
                            },
                            "fullDescription": {
                                "text": "This is a last resort. You should be careful when using QuerySet.extra due to SQLi https://docs.djangoproject.com/en/3.0/ref/models/querysets/#django.db.models.query.QuerySet.extra"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.command-injection-formatted-runtime-call.command-injection-formatted-runtime-call",
                            "name": "java.lang.security.audit.command-injection-formatted-runtime-call.command-injection-formatted-runtime-call",
                            "shortDescription": {
                                "text": "A formatted or concatenated string was detected as input to a java.lang.Runtime call.\nThis is dangerous if a variable is controlled by user input and could result in a\ncommand injection. Ensure your variables are not controlled by users or sufficiently sanitized.\n"
                            },
                            "fullDescription": {
                                "text": "A formatted or concatenated string was detected as input to a java.lang.Runtime call.\nThis is dangerous if a variable is controlled by user input and could result in a\ncommand injection. Ensure your variables are not controlled by users or sufficiently sanitized.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.secure-set-cookie.secure-set-cookie",
                            "name": "python.flask.security.audit.secure-set-cookie.secure-set-cookie",
                            "shortDescription": {
                                "text": "Flask cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in\nresponse.set_cookie(...). If your situation calls for different settings, explicitly disable the setting.\nIf you want to send the cookie over http, set secure=False.  If you want to let client-side JavaScript\nread the cookie, set httponly=False. If you want to attach cookies to requests for external sites,\nset samesite=None.\n"
                            },
                            "fullDescription": {
                                "text": "Flask cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in\nresponse.set_cookie(...). If your situation calls for different settings, explicitly disable the setting.\nIf you want to send the cookie over http, set secure=False.  If you want to let client-side JavaScript\nread the cookie, set httponly=False. If you want to attach cookies to requests for external sites,\nset samesite=None.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.file-disclosure.file-disclosure",
                            "name": "ruby.lang.security.file-disclosure.file-disclosure",
                            "shortDescription": {
                                "text": "Special requests can determine whether a file exists on a filesystem that's outside the Ruby app's\nroot directory. To fix this, set config.serve_static_assets = false.\n"
                            },
                            "fullDescription": {
                                "text": "Special requests can determine whether a file exists on a filesystem that's outside the Ruby app's\nroot directory. To fix this, set config.serve_static_assets = false.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.ssl.ssl-v3-is-insecure",
                            "name": "go.lang.security.audit.crypto.ssl.ssl-v3-is-insecure",
                            "shortDescription": {
                                "text": "SSLv3 is insecure because it has known vulnerabilities.\nStarting with go1.14, SSLv3 will be removed. Instead, use\n'tls.VersionTLS13'.\n"
                            },
                            "fullDescription": {
                                "text": "SSLv3 is insecure because it has known vulnerabilities.\nStarting with go1.14, SSLv3 will be removed. Instead, use\n'tls.VersionTLS13'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-md5",
                            "name": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-md5",
                            "shortDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "generic.html-templates.security.var-in-script-tag.var-in-script-tag",
                            "name": "generic.html-templates.security.var-in-script-tag.var-in-script-tag",
                            "shortDescription": {
                                "text": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`)."
                            },
                            "fullDescription": {
                                "text": "Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI. For Django, you may also consider using the 'json_script' template tag and retrieving the data in your script by using the element ID (e.g., `document.getElementById`)."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.insecure-redirect.insecure-redirect",
                            "name": "generic.nginx.security.insecure-redirect.insecure-redirect",
                            "shortDescription": {
                                "text": "Detected an insecure redirect in this nginx configuration.\nIf no scheme is specified, nginx will forward the request with the\nincoming scheme. This could result in unencrypted communications.\nTo fix this, include the 'https' scheme.\n"
                            },
                            "fullDescription": {
                                "text": "Detected an insecure redirect in this nginx configuration.\nIf no scheme is specified, nginx will forward the request with the\nincoming scheme. This could result in unencrypted communications.\nTo fix this, include the 'https' scheme.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.object-deserialization.object-deserialization",
                            "name": "java.lang.security.audit.object-deserialization.object-deserialization",
                            "shortDescription": {
                                "text": "Found object deserialization using ObjectInputStream. Deserializing entire\nJava objects is dangerous because malicious actors can create Java object\nstreams with unintended consequences. Ensure that the objects being deserialized\nare not user-controlled. If this must be done, consider using HMACs to sign\nthe data stream to make sure it is not tampered with, or consider only\ntransmitting object fields and populating a new object.\n"
                            },
                            "fullDescription": {
                                "text": "Found object deserialization using ObjectInputStream. Deserializing entire\nJava objects is dangerous because malicious actors can create Java object\nstreams with unintended consequences. Ensure that the objects being deserialized\nare not user-controlled. If this must be done, consider using HMACs to sign\nthe data stream to make sure it is not tampered with, or consider only\ntransmitting object fields and populating a new object.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "javascript.jsonwebtoken.security.jwt-none-alg.jwt-none-alg",
                            "name": "javascript.jsonwebtoken.security.jwt-none-alg.jwt-none-alg",
                            "shortDescription": {
                                "text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"
                            },
                            "fullDescription": {
                                "text": "Detected use of the 'none' algorithm in a JWT token.\nThe 'none' algorithm assumes the integrity of the token has already\nbeen verified. This would allow a malicious actor to forge a JWT token\nthat will automatically be verified. Do not explicitly use the 'none'\nalgorithm. Instead, use an algorithm such as 'HS256'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "python.cryptography.security.insecure-cipher-algorithms.insecure-cipher-algorithm-blowfish",
                            "name": "python.cryptography.security.insecure-cipher-algorithms.insecure-cipher-algorithm-blowfish",
                            "shortDescription": {
                                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_ENV",
                            "name": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_ENV",
                            "shortDescription": {
                                "text": "Hardcoded variable `ENV` detected. Set this by using FLASK_ENV environment variable"
                            },
                            "fullDescription": {
                                "text": "Hardcoded variable `ENV` detected. Set this by using FLASK_ENV environment variable"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-489: Active Debug Code",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.deserialization.pickle.avoid-cPickle",
                            "name": "python.lang.security.deserialization.pickle.avoid-cPickle",
                            "shortDescription": {
                                "text": "Avoid using `cPickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using `cPickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.xmlinputfactory-possible-xxe.xmlinputfactory-possible-xxe",
                            "name": "java.lang.security.xmlinputfactory-possible-xxe.xmlinputfactory-possible-xxe",
                            "shortDescription": {
                                "text": "XML external entities are not explicitly disabled for this XMLInputFactory. This could be vulnerable to XML external entity\nvulnerabilities. Explicitly disable external entities by setting \"javax.xml.stream.isSupportingExternalEntities\" to false.\n"
                            },
                            "fullDescription": {
                                "text": "XML external entities are not explicitly disabled for this XMLInputFactory. This could be vulnerable to XML external entity\nvulnerabilities. Explicitly disable external entities by setting \"javax.xml.stream.isSupportingExternalEntities\" to false.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-611: Improper Restriction of XML External Entity Reference",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "python.requests.security.disabled-cert-validation.disabled-cert-validation",
                            "name": "python.requests.security.disabled-cert-validation.disabled-cert-validation",
                            "shortDescription": {
                                "text": "Certificate verification has been explicitly disabled. This\npermits insecure connections to insecure servers. Re-enable\ncertification validation.\n"
                            },
                            "fullDescription": {
                                "text": "Certificate verification has been explicitly disabled. This\npermits insecure connections to insecure servers. Re-enable\ncertification validation.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-295: Improper Certificate Validation",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.httpsconnection-detected.httpsconnection-detected",
                            "name": "python.lang.security.audit.httpsconnection-detected.httpsconnection-detected",
                            "shortDescription": {
                                "text": "The HTTPSConnection API has changed frequently with minor releases of Python.\nEnsure you are using the API for your version of Python securely.\nFor example, Python 3 versions prior to 3.4.3 will not verify SSL certificates by default.\nSee https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "The HTTPSConnection API has changed frequently with minor releases of Python.\nEnsure you are using the API for your version of Python securely.\nFor example, Python 3 versions prior to 3.4.3 will not verify SSL certificates by default.\nSee https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-295: Improper Certificate Validation",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-sha1",
                            "name": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-sha1",
                            "shortDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.injection.mass-assignment.mass-assignment",
                            "name": "python.django.security.injection.mass-assignment.mass-assignment",
                            "shortDescription": {
                                "text": "Mass assignment detected. This can result in assignment to\nmodel fields that are unintended and can be exploited by\nan attacker. Instead of using '**request.$W', assign each field you\nwant to edit individually to prevent mass assignment. You can read\nmore about mass assignment at\nhttps://cheatsheetseries.owasp.org/cheatsheets/Mass_Assignment_Cheat_Sheet.html.\n"
                            },
                            "fullDescription": {
                                "text": "Mass assignment detected. This can result in assignment to\nmodel fields that are unintended and can be exploited by\nan attacker. Instead of using '**request.$W', assign each field you\nwant to edit individually to prevent mass assignment. You can read\nmore about mass assignment at\nhttps://cheatsheetseries.owasp.org/cheatsheets/Mass_Assignment_Cheat_Sheet.html.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.ldap-injection.ldap-injection",
                            "name": "java.lang.security.audit.ldap-injection.ldap-injection",
                            "shortDescription": {
                                "text": "Detected non-constant data passed into an LDAP query. If this data can be\ncontrolled by an external user, this is an LDAP injection.\nEnsure data passed to an LDAP query is not controllable; or properly sanitize\nthe data.\n"
                            },
                            "fullDescription": {
                                "text": "Detected non-constant data passed into an LDAP query. If this data can be\ncontrolled by an external user, this is an LDAP injection.\nEnsure data passed to an LDAP query is not controllable; or properly sanitize\nthe data.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.marshal.marshal-usage",
                            "name": "python.lang.security.audit.marshal.marshal-usage",
                            "shortDescription": {
                                "text": "The marshal module is not intended to be secure against erroneous or maliciously constructed data.\nNever unmarshal data received from an untrusted or unauthenticated source.\nSee more details: https://docs.python.org/3/library/marshal.html?highlight=security\n"
                            },
                            "fullDescription": {
                                "text": "The marshal module is not intended to be secure against erroneous or maliciously constructed data.\nNever unmarshal data received from an untrusted or unauthenticated source.\nSee more details: https://docs.python.org/3/library/marshal.html?highlight=security\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5",
                            "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-md5",
                            "shortDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "name": "python.django.security.audit.secure-cookies.django-secure-set-cookie",
                            "shortDescription": {
                                "text": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in\nresponse.set_cookie(...). If your situation calls for different settings, explicitly disable the setting.\nIf you want to send the cookie over http, set secure=False.  If you want to let client-side JavaScript\nread the cookie, set httponly=False. If you want to attach cookies to requests for external sites,\nset samesite=None.\n"
                            },
                            "fullDescription": {
                                "text": "Django cookies should be handled securely by setting secure=True, httponly=True, and samesite='Lax' in\nresponse.set_cookie(...). If your situation calls for different settings, explicitly disable the setting.\nIf you want to send the cookie over http, set secure=False.  If you want to let client-side JavaScript\nread the cookie, set httponly=False. If you want to attach cookies to requests for external sites,\nset samesite=None.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.bind_all.avoid-bind-to-all-interfaces",
                            "name": "go.lang.security.audit.net.bind_all.avoid-bind-to-all-interfaces",
                            "shortDescription": {
                                "text": "Listening on 0.0.0.0 or empty string could unexpectedly expose the server publicly as it binds to all available interfaces"
                            },
                            "fullDescription": {
                                "text": "Listening on 0.0.0.0 or empty string could unexpectedly expose the server publicly as it binds to all available interfaces"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.xmlinputfactory-external-entities-enabled.xmlinputfactory-external-entities-enabled",
                            "name": "java.lang.security.xmlinputfactory-external-entities-enabled.xmlinputfactory-external-entities-enabled",
                            "shortDescription": {
                                "text": "XML external entities are enabled for this XMLInputFactory. This is vulnerable to XML external entity\nattacks. Disable external entities by setting \"javax.xml.stream.isSupportingExternalEntities\" to false.\n"
                            },
                            "fullDescription": {
                                "text": "XML external entities are enabled for this XMLInputFactory. This is vulnerable to XML external entity\nattacks. Disable external entities by setting \"javax.xml.stream.isSupportingExternalEntities\" to false.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-611: Improper Restriction of XML External Entity Reference",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.detect-disable-mustache-escape.detect-disable-mustache-escape",
                            "name": "javascript.lang.security.detect-disable-mustache-escape.detect-disable-mustache-escape",
                            "shortDescription": {
                                "text": "Markup escaping disabled. This can be used with some template engines to escape\ndisabling of HTML entities, which can lead to XSS attacks.\n"
                            },
                            "fullDescription": {
                                "text": "Markup escaping disabled. This can be used with some template engines to escape\ndisabling of HTML entities, which can lead to XSS attacks.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-116: Improper Encoding or Escaping of Output",
                                    "OWASP-A7: Cross-Site Scripting XSS"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.weak-hashes-md5.weak-hashes-md5",
                            "name": "ruby.lang.security.weak-hashes-md5.weak-hashes-md5",
                            "shortDescription": {
                                "text": "Should not use md5 to generate hashes. md5 is proven to be vulnerable through the use of brute-force attacks.\nCould also result in collisions,leading to potential collision attacks. Use SHA256 or other hashing functions instead.\n"
                            },
                            "fullDescription": {
                                "text": "Should not use md5 to generate hashes. md5 is proven to be vulnerable through the use of brute-force attacks.\nCould also result in collisions,leading to potential collision attacks. Use SHA256 or other hashing functions instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
                            "name": "terraform.lang.security.ebs-unencrypted-volume.unencrypted-ebs-volume",
                            "shortDescription": {
                                "text": "An EBS volume is configured without encryption enabled.\n"
                            },
                            "fullDescription": {
                                "text": "An EBS volume is configured without encryption enabled.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.lang.security.deserialization.pickle.avoid-shelve",
                            "name": "python.lang.security.deserialization.pickle.avoid-shelve",
                            "shortDescription": {
                                "text": "Avoid using `shelve`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using `shelve`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-rc4",
                            "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-rc4",
                            "shortDescription": {
                                "text": "Detected RC4 cipher algorithm which is insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected RC4 cipher algorithm which is insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.dangerous-template-string.dangerous-template-string",
                            "name": "python.flask.security.dangerous-template-string.dangerous-template-string",
                            "shortDescription": {
                                "text": "Found a template created with string formatting.\nThis is susceptible to server-side template injection\nand cross-site scripting attacks.\n"
                            },
                            "fullDescription": {
                                "text": "Found a template created with string formatting.\nThis is susceptible to server-side template injection\nand cross-site scripting attacks.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.extends-custom-expression.extends-custom-expression",
                            "name": "python.django.security.audit.extends-custom-expression.extends-custom-expression",
                            "shortDescription": {
                                "text": "Found extension of custom expression: $CLASS. Extending expressions\nin this way could inadvertently expose a SQL injection vulnerability.\nSee https://docs.djangoproject.com/en/3.0/ref/models/expressions/#avoiding-sql-injection\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "Found extension of custom expression: $CLASS. Extending expressions\nin this way could inadvertently expose a SQL injection vulnerability.\nSee https://docs.djangoproject.com/en/3.0/ref/models/expressions/#avoiding-sql-injection\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.weak-ssl-context.weak-ssl-context",
                            "name": "java.lang.security.audit.weak-ssl-context.weak-ssl-context",
                            "shortDescription": {
                                "text": "An insecure SSL context was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse SSLContext.getInstance(\"TLSv1.2\") for the best security.\n"
                            },
                            "fullDescription": {
                                "text": "An insecure SSL context was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse SSLContext.getInstance(\"TLSv1.2\") for the best security.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.filter-skipping.filter-skipping",
                            "name": "ruby.lang.security.filter-skipping.filter-skipping",
                            "shortDescription": {
                                "text": "Checks for use of action in Ruby routes. This can cause Rails to render an arbitrary view if an\nattacker creates an URL accurately. Affects 3.0 applications. Can avoid the vulnerability by providing\nadditional constraints.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for use of action in Ruby routes. This can cause Rails to render an arbitrary view if an\nattacker creates an URL accurately. Affects 3.0 applications. Can avoid the vulnerability by providing\nadditional constraints.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
                            "name": "python.flask.security.xss.audit.template-autoescape-off.template-autoescape-off",
                            "shortDescription": {
                                "text": "Detected a segment of a Flask template where autoescaping is explicitly disabled with '{% autoescape off %}'. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability, or turn autoescape on."
                            },
                            "fullDescription": {
                                "text": "Detected a segment of a Flask template where autoescaping is explicitly disabled with '{% autoescape off %}'. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability, or turn autoescape on."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "html.security.missing-noreferrer.missing-noreferrer",
                            "name": "html.security.missing-noreferrer.missing-noreferrer",
                            "shortDescription": {
                                "text": "This anchor tag with 'target=\"_blank\"' is missing 'noreferrer'. A page opened with 'target=\"_blank\"' can access the window object of the origin page. This means it can manipulate the 'window.opener' property, which could redirect the origin page to a malicious URL. This is called reverse tabnabbing. To prevent this, include 'rel=noreferrer' on this tag."
                            },
                            "fullDescription": {
                                "text": "This anchor tag with 'target=\"_blank\"' is missing 'noreferrer'. A page opened with 'target=\"_blank\"' can access the window object of the origin page. This means it can manipulate the 'window.opener' property, which could redirect the origin page to a malicious URL. This is called reverse tabnabbing. To prevent this, include 'rel=noreferrer' on this tag."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.cryptography.security.insecure-cipher-algorithms.insecure-cipher-algorithm-rc4",
                            "name": "python.cryptography.security.insecure-cipher-algorithms.insecure-cipher-algorithm-rc4",
                            "shortDescription": {
                                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.logging.listeneval.listen-eval",
                            "name": "python.lang.security.audit.logging.listeneval.listen-eval",
                            "shortDescription": {
                                "text": "Because portions of the logging configuration are passed through eval(),\nuse of this function may open its users to a security risk. While the\nfunction only binds to a socket on localhost, and so does not accept\nconnections from remote machines, there are scenarios where untrusted\ncode could be run under the account of the process which calls listen().\nSee more details at https://docs.python.org/3/library/logging.config.html?highlight=security#logging.config.listen\n"
                            },
                            "fullDescription": {
                                "text": "Because portions of the logging configuration are passed through eval(),\nuse of this function may open its users to a security risk. While the\nfunction only binds to a socket on localhost, and so does not accept\nconnections from remote machines, there are scenarios where untrusted\ncode could be run under the account of the process which calls listen().\nSee more details at https://docs.python.org/3/library/logging.config.html?highlight=security#logging.config.listen\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.bad_tmp.bad-tmp-file-creation",
                            "name": "go.lang.security.bad_tmp.bad-tmp-file-creation",
                            "shortDescription": {
                                "text": "File creation in shared tmp directory without using ioutil.Tempfile"
                            },
                            "fullDescription": {
                                "text": "File creation in shared tmp directory without using ioutil.Tempfile"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-377: Insecure Temporary File"
                                ]
                            }
                        },
                        {
                            "id": "typescript.react.security.audit.react-http-leak.react-http-leak",
                            "name": "typescript.react.security.audit.react-http-leak.react-http-leak",
                            "shortDescription": {
                                "text": "This HTML element '$EL' and attribute '$ATTR' together may load an external resource. This means that if dynamic content can enter this attribute it may be possible for an attacker to send HTTP requests to unintended locations which may leak data about your users. If this element is reaching out to a known host, consider hardcoding the host (or loading from a configuration) and appending the dynamic path. See https://github.com/cure53/HTTPLeaks for more information."
                            },
                            "fullDescription": {
                                "text": "This HTML element '$EL' and attribute '$ATTR' together may load an external resource. This means that if dynamic content can enter this attribute it may be possible for an attacker to send HTTP requests to unintended locations which may leak data about your users. If this element is reaching out to a known host, consider hardcoding the host (or loading from a configuration) and appending the dynamic path. See https://github.com/cure53/HTTPLeaks for more information."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.unescaped-data-in-url.unescaped-data-in-url",
                            "name": "go.lang.security.audit.net.unescaped-data-in-url.unescaped-data-in-url",
                            "shortDescription": {
                                "text": "Found a formatted template string passed to 'template.URL()'.\n'template.URL()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template.\n"
                            },
                            "fullDescription": {
                                "text": "Found a formatted template string passed to 'template.URL()'.\n'template.URL()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected",
                            "name": "python.lang.security.audit.dynamic-urllib-use-detected.dynamic-urllib-use-detected",
                            "shortDescription": {
                                "text": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead."
                            },
                            "fullDescription": {
                                "text": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-939: Improper Authorization in Handler for Custom URL Scheme",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.cookie-serialization.cookie-serialization",
                            "name": "ruby.lang.security.cookie-serialization.cookie-serialization",
                            "shortDescription": {
                                "text": "Checks if code allows cookies to be deserialized using Marshal. If the attacker can craft a valid cookie, this could lead to\nremote code execution. The hybrid check is just to warn users to migrate to :json for best practice.\n"
                            },
                            "fullDescription": {
                                "text": "Checks if code allows cookies to be deserialized using Marshal. If the attacker can craft a valid cookie, this could lead to\nremote code execution. The hybrid check is just to warn users to migrate to :json for best practice.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.lang.security.deserialization.pickle.avoid-pickle",
                            "name": "python.lang.security.deserialization.pickle.avoid-pickle",
                            "shortDescription": {
                                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                            "name": "typescript.react.security.audit.react-dangerouslysetinnerhtml.react-dangerouslysetinnerhtml",
                            "shortDescription": {
                                "text": "Setting HTML from code is risky because it\u2019s easy to inadvertently expose your users to a cross-site scripting (XSS) attack.\n"
                            },
                            "fullDescription": {
                                "text": "Setting HTML from code is risky because it\u2019s easy to inadvertently expose your users to a cross-site scripting (XSS) attack.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.airflow.security.audit.formatted-string-bashoperator.formatted-string-bashoperator",
                            "name": "python.airflow.security.audit.formatted-string-bashoperator.formatted-string-bashoperator",
                            "shortDescription": {
                                "text": "Found a formatted string in BashOperator: $CMD.\nThis could be vulnerable to injection.\nBe extra sure your variables are not controllable by external sources.\n"
                            },
                            "fullDescription": {
                                "text": "Found a formatted string in BashOperator: $CMD.\nThis could be vulnerable to injection.\nBe extra sure your variables are not controllable by external sources.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "javascript.jose.security.jwt-exposed-credentials.jwt-exposed-credentials",
                            "name": "javascript.jose.security.jwt-exposed-credentials.jwt-exposed-credentials",
                            "shortDescription": {
                                "text": "Password is exposed through JWT token payload. This is not encrypted and\nthe password could be compromised. Do not store passwords in JWT tokens.\n"
                            },
                            "fullDescription": {
                                "text": "Password is exposed through JWT token payload. This is not encrypted and\nthe password could be compromised. Do not store passwords in JWT tokens.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-522: Insufficiently Protected Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
                            "name": "go.grpc.security.grpc-client-insecure-connection.grpc-client-insecure-connection",
                            "shortDescription": {
                                "text": "Found an insecure gRPC connection using 'grpc.WithInsecure()'. This creates a connection without encryption to a gRPC server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Instead, establish a secure connection with an SSL certificate using the 'grpc.WithTransportCredentials()' function. You can create a create credentials using a 'tls.Config{}' struct with 'credentials.NewTLS()'. The final fix looks like this: 'grpc.WithTransportCredentials(credentials.NewTLS(<config>))'."
                            },
                            "fullDescription": {
                                "text": "Found an insecure gRPC connection using 'grpc.WithInsecure()'. This creates a connection without encryption to a gRPC server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Instead, establish a secure connection with an SSL certificate using the 'grpc.WithTransportCredentials()' function. You can create a create credentials using a 'tls.Config{}' struct with 'credentials.NewTLS()'. The final fix looks like this: 'grpc.WithTransportCredentials(credentials.NewTLS(<config>))'."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-300: Channel Accessible by Non-Endpoint"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket",
                            "name": "java.lang.security.audit.crypto.unencrypted-socket.unencrypted-socket",
                            "shortDescription": {
                                "text": "This socket is not encrypted.\nThe traffic could be read by an attacker intercepting the network traffic.\nUse an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory'\ninstead\n"
                            },
                            "fullDescription": {
                                "text": "This socket is not encrypted.\nThe traffic could be read by an attacker intercepting the network traffic.\nUse an SSLSocket created by 'SSLSocketFactory' or 'SSLServerSocketFactory'\ninstead\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-319: Cleartext Transmission of Sensitive Information",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.passwords.use-none-for-password-default.use-none-for-password-default",
                            "name": "python.django.security.passwords.use-none-for-password-default.use-none-for-password-default",
                            "shortDescription": {
                                "text": "'$VAR' is using the empty string as its default and is being used to set\nthe password on '$MODEL'. If you meant to set an unusable password, set\nthe default value to 'None' or call 'set_unusable_password()'.\n"
                            },
                            "fullDescription": {
                                "text": "'$VAR' is using the empty string as its default and is being used to set\nthe password on '$MODEL'. If you meant to set an unusable password, set\nthe default value to 'None' or call 'set_unusable_password()'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-521: Weak Password Requirements",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "java.rmi.security.server-dangerous-object-deserialization.server-dangerous-object-deserialization",
                            "name": "java.rmi.security.server-dangerous-object-deserialization.server-dangerous-object-deserialization",
                            "shortDescription": {
                                "text": "Using an arbitrary object ('Object $PARAM') with Java RMI is an insecure deserialization\nvulnerability. This object can be manipulated by a malicious actor allowing them to execute\ncode on your system. Instead, use an integer ID to look up your object, or consider alternative\nserializiation schemes such as JSON.\n"
                            },
                            "fullDescription": {
                                "text": "Using an arbitrary object ('Object $PARAM') with Java RMI is an insecure deserialization\nvulnerability. This object can be manipulated by a malicious actor allowing them to execute\ncode on your system. Instead, use an integer ID to look up your object, or consider alternative\nserializiation schemes such as JSON.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.telnetlib.telnetlib",
                            "name": "python.lang.security.audit.telnetlib.telnetlib",
                            "shortDescription": {
                                "text": "Telnet does not encrypt communications. Use SSH instead.\n"
                            },
                            "fullDescription": {
                                "text": "Telnet does not encrypt communications. Use SSH instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-319: Cleartext Transmission of Sensitive Information",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.weak-hashes-sha1.weak-hashes-sha1",
                            "name": "ruby.lang.security.weak-hashes-sha1.weak-hashes-sha1",
                            "shortDescription": {
                                "text": "Should not use SHA1 to generate hashes. There is a proven SHA1 hash collision by Google, which could lead to vulnerabilities.\nUse SHA256, SHA3 or other hashing functions instead.\n"
                            },
                            "fullDescription": {
                                "text": "Should not use SHA1 to generate hashes. There is a proven SHA1 hash collision by Google, which could lead to vulnerabilities.\nUse SHA256, SHA3 or other hashing functions instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.django.security.injection.path-traversal.path-traversal-file-name.path-traversal-file-name",
                            "name": "python.django.security.injection.path-traversal.path-traversal-file-name.path-traversal-file-name",
                            "shortDescription": {
                                "text": "Data from request is passed to a file name `$FILE`.\nThis is a path traversal vulnerability: https://owasp.org/www-community/attacks/Path_Traversal\nTo mitigate, consider using os.path.abspath or os.path.realpath or Path library.\n"
                            },
                            "fullDescription": {
                                "text": "Data from request is passed to a file name `$FILE`.\nThis is a path traversal vulnerability: https://owasp.org/www-community/attacks/Path_Traversal\nTo mitigate, consider using os.path.abspath or os.path.realpath or Path library.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.rsa-no-padding.rsa-no-padding",
                            "name": "java.lang.security.audit.crypto.rsa-no-padding.rsa-no-padding",
                            "shortDescription": {
                                "text": "Using RSA without OAEP mode weakens the encryption.\n"
                            },
                            "fullDescription": {
                                "text": "Using RSA without OAEP mode weakens the encryption.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitve Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.unprotected-mass-assign.mass-assignment-vuln",
                            "name": "ruby.lang.security.unprotected-mass-assign.mass-assignment-vuln",
                            "shortDescription": {
                                "text": "Checks for calls to without_protection during mass assignment (which allows record creation from hash values).\nThis can lead to users bypassing permissions protections. For Rails 4 and higher, mass protection is on by default.\nFix: Don't use :without_protection => true. Instead, configure attr_acessible to control attribute access.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for calls to without_protection during mass assignment (which allows record creation from hash values).\nThis can lead to users bypassing permissions protections. For Rails 4 and higher, mass protection is on by default.\nFix: Don't use :without_protection => true. Instead, configure attr_acessible to control attribute access.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.dangerous-spawn-process.dangerous-spawn-process",
                            "name": "python.lang.security.audit.dangerous-spawn-process.dangerous-spawn-process",
                            "shortDescription": {
                                "text": "Found dynamic content when spawning a process. This is dangerous if external\ndata can reach this function call because it allows a malicious actor to\nexecute commands. Ensure no external data reaches here.\n"
                            },
                            "fullDescription": {
                                "text": "Found dynamic content when spawning a process. This is dangerous if external\ndata can reach this function call because it allows a malicious actor to\nexecute commands. Ensure no external data reaches here.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.dangerous-system-call.dangerous-system-call",
                            "name": "python.lang.security.audit.dangerous-system-call.dangerous-system-call",
                            "shortDescription": {
                                "text": "Found dynamic content used in a system call. This is dangerous if external data can reach this function call because it allows a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability."
                            },
                            "fullDescription": {
                                "text": "Found dynamic content used in a system call. This is dangerous if external data can reach this function call because it allows a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.insecure-ssl-version.insecure-ssl-version",
                            "name": "generic.nginx.security.insecure-ssl-version.insecure-ssl-version",
                            "shortDescription": {
                                "text": "Detected use of an insecure SSL version. Secure SSL versions are TLSv1.2 and TLS1.3; older versions are known to be broken and are susceptible to attacks. Prefer use of TLSv1.2 or later."
                            },
                            "fullDescription": {
                                "text": "Detected use of an insecure SSL version. Secure SSL versions are TLSv1.2 and TLS1.3; older versions are known to be broken and are susceptible to attacks. Prefer use of TLSv1.2 or later."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
                            "name": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
                            "shortDescription": {
                                "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher.\nUpgrade to use AES.\nSee https://csrc.nist.gov/News/2017/Update-to-Current-Use-and-Deprecation-of-TDEA for more information.\n"
                            },
                            "fullDescription": {
                                "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher.\nUpgrade to use AES.\nSee https://csrc.nist.gov/News/2017/Update-to-Current-Use-and-Deprecation-of-TDEA for more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-DES",
                            "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-DES",
                            "shortDescription": {
                                "text": "Detected DES cipher algorithm which is insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected DES cipher algorithm which is insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.dynamic-proxy-host.dynamic-proxy-host",
                            "name": "generic.nginx.security.dynamic-proxy-host.dynamic-proxy-host",
                            "shortDescription": {
                                "text": "The host for this proxy URL is dynamically determined. This can be dangerous if the host can be injected by an attacker because it may forcibly alter destination of the proxy. Consider hardcoding acceptable destinations and retrieving them with 'map' or something similar."
                            },
                            "fullDescription": {
                                "text": "The host for this proxy URL is dynamically determined. This can be dangerous if the host can be injected by an attacker because it may forcibly alter destination of the proxy. Consider hardcoding acceptable destinations and retrieving them with 'map' or something similar."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "terraform.lang.security.s3-cors-all-origins.all-origins-allowed",
                            "name": "terraform.lang.security.s3-cors-all-origins.all-origins-allowed",
                            "shortDescription": {
                                "text": "CORS rule on bucket permits any origin"
                            },
                            "fullDescription": {
                                "text": "CORS rule on bucket permits any origin"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.ssl.defaulthttpclient-is-deprecated.defaulthttpclient-is-deprecated",
                            "name": "java.lang.security.audit.crypto.ssl.defaulthttpclient-is-deprecated.defaulthttpclient-is-deprecated",
                            "shortDescription": {
                                "text": "DefaultHttpClient is deprecated. Further, it does not support connections\nusing TLS1.2, which makes using DefaultHttpClient a security hazard.\nUse SystemDefaultHttpClient instead, which supports TLS1.2.\n"
                            },
                            "fullDescription": {
                                "text": "DefaultHttpClient is deprecated. Further, it does not support connections\nusing TLS1.2, which makes using DefaultHttpClient a security hazard.\nUse SystemDefaultHttpClient instead, which supports TLS1.2.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.anonymous-ldap-bind.anonymous-ldap-bind",
                            "name": "java.lang.security.audit.anonymous-ldap-bind.anonymous-ldap-bind",
                            "shortDescription": {
                                "text": "Detected anonymous LDAP bind.\nThis permits anonymous users to execute LDAP statements. Consider enforcing\nauthentication for LDAP. See https://docs.oracle.com/javase/tutorial/jndi/ldap/auth_mechs.html\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "Detected anonymous LDAP bind.\nThis permits anonymous users to execute LDAP statements. Consider enforcing\nauthentication for LDAP. See https://docs.oracle.com/javase/tutorial/jndi/ldap/auth_mechs.html\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-287: Improper Authentication",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.servletresponse-writer-xss.servletresponse-writer-xss",
                            "name": "java.lang.security.servletresponse-writer-xss.servletresponse-writer-xss",
                            "shortDescription": {
                                "text": "Cross-site scripting detected in HttpServletResponse writer with variable '$VAR'. User\ninput was detected going directly from the HttpServletRequest into output. Ensure your\ndata is properly encoded using org.owasp.encoder.Encode.forHtml: 'Encode.forHtml($VAR)'.\n"
                            },
                            "fullDescription": {
                                "text": "Cross-site scripting detected in HttpServletResponse writer with variable '$VAR'. User\ninput was detected going directly from the HttpServletRequest into output. Ensure your\ndata is properly encoded using org.owasp.encoder.Encode.forHtml: 'Encode.forHtml($VAR)'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-Site Scripting ('XSS')"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.unescaped-template-extension.unescaped-template-extension",
                            "name": "python.flask.security.unescaped-template-extension.unescaped-template-extension",
                            "shortDescription": {
                                "text": "Flask does not automatically escape Jinja templates unless they have\n.html, .htm, .xml, or .xhtml extensions. This could lead to XSS attacks.\nUse .html, .htm, .xml, or .xhtml for your template extensions.\nSee https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "Flask does not automatically escape Jinja templates unless they have\n.html, .htm, .xml, or .xhtml extensions. This could lead to XSS attacks.\nUse .html, .htm, .xml, or .xhtml for your template extensions.\nSee https://flask.palletsprojects.com/en/1.1.x/templating/#jinja-setup\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-Site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.url-rewriting.url-rewriting",
                            "name": "java.lang.security.audit.url-rewriting.url-rewriting",
                            "shortDescription": {
                                "text": "URL rewriting has significant security risks.\nSince session ID appears in the URL, it may be easily seen by third parties.\n"
                            },
                            "fullDescription": {
                                "text": "URL rewriting has significant security risks.\nSince session ID appears in the URL, it may be easily seen by third parties.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.weak-hash.use-of-sha1",
                            "name": "java.lang.security.audit.crypto.weak-hash.use-of-sha1",
                            "shortDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "java.spring.security.audit.spel-injection.spel-injection",
                            "name": "java.spring.security.audit.spel-injection.spel-injection",
                            "shortDescription": {
                                "text": "A Spring expression is built with a dynamic value. The source of the value(s) should be verified to avoid that unfiltered values fall into this risky code evaluation.\n"
                            },
                            "fullDescription": {
                                "text": "A Spring expression is built with a dynamic value. The source of the value(s) should be verified to avoid that unfiltered values fall into this risky code evaluation.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-94: Improper Control of Generation of Code ('Code Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.cryptography.security.insecure-cipher-mode-ecb.insecure-cipher-mode-ecb",
                            "name": "python.cryptography.security.insecure-cipher-mode-ecb.insecure-cipher-mode-ecb",
                            "shortDescription": {
                                "text": "Detected ECB cipher mode which is considered insecure. The algorithm can\npotentially leak information about the plaintext. Use CBC mode instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected ECB cipher mode which is considered insecure. The algorithm can\npotentially leak information about the plaintext. Use CBC mode instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.header-injection.header-injection",
                            "name": "generic.nginx.security.header-injection.header-injection",
                            "shortDescription": {
                                "text": "The $$VARIABLE path parameter is added as a header in the response. This could allow an attacker to inject a newline and add a new header into the response. This is called HTTP response splitting. To fix, do not allow whitespace in the path parameter: '[^\\s]+'."
                            },
                            "fullDescription": {
                                "text": "The $$VARIABLE path parameter is added as a header in the response. This could allow an attacker to inject a newline and add a new header into the response. This is called HTTP response splitting. To fix, do not allow whitespace in the path parameter: '[^\\s]+'."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "javascript.lang.security.detect-no-csrf-before-method-override.detect-no-csrf-before-method-override",
                            "name": "javascript.lang.security.detect-no-csrf-before-method-override.detect-no-csrf-before-method-override",
                            "shortDescription": {
                                "text": "Detected use of express.csrf() middleware before express.methodOverride(). This can\nallow GET requests (which are not checked by csrf) to turn into POST requests later.\n"
                            },
                            "fullDescription": {
                                "text": "Detected use of express.csrf() middleware before express.methodOverride(). This can\nallow GET requests (which are not checked by csrf) to turn into POST requests later.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-352: Cross-Site Request Forgery (CSRF)"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.dynamic-httptrace-clienttrace.dynamic-httptrace-clienttrace",
                            "name": "go.lang.security.audit.net.dynamic-httptrace-clienttrace.dynamic-httptrace-clienttrace",
                            "shortDescription": {
                                "text": "Detected a potentially dynamic ClientTrace. This occurred because semgrep could not\nfind a static definition for '$TRACE'. Dynamic ClientTraces are dangerous because\nthey deserialize function code to run when certain Request events occur, which could lead\nto code being run without your knowledge. Ensure that your ClientTrace is statically defined.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a potentially dynamic ClientTrace. This occurred because semgrep could not\nfind a static definition for '$TRACE'. Dynamic ClientTraces are dangerous because\nthey deserialize function code to run when certain Request events occur, which could lead\nto code being run without your knowledge. Ensure that your ClientTrace is statically defined.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-913: Improper Control of Dynamically-Managed Code Resources",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.use-defused-xml.use-defused-xml",
                            "name": "python.lang.security.use-defused-xml.use-defused-xml",
                            "shortDescription": {
                                "text": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE)\nattacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'.\nSee https://github.com/tiran/defusedxml for more information.\n"
                            },
                            "fullDescription": {
                                "text": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE)\nattacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'.\nSee https://github.com/tiran/defusedxml for more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-611: Improper Restriction of XML External Entity Reference",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.injection.user-exec.exec-injection",
                            "name": "python.flask.security.injection.user-exec.exec-injection",
                            "shortDescription": {
                                "text": "Detected user data flowing into exec. This is code injection and should be avoided."
                            },
                            "fullDescription": {
                                "text": "Detected user data flowing into exec. This is code injection and should be avoided."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.spring.security.audit.spring-unvalidated-redirect.spring-unvalidated-redirect",
                            "name": "java.spring.security.audit.spring-unvalidated-redirect.spring-unvalidated-redirect",
                            "shortDescription": {
                                "text": "Application redirects a user to a destination URL specified by a user supplied parameter that is not validated.\n"
                            },
                            "fullDescription": {
                                "text": "Application redirects a user to a destination URL specified by a user supplied parameter that is not validated.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                            "name": "python.django.security.audit.avoid-insecure-deserialization.avoid-insecure-deserialization",
                            "shortDescription": {
                                "text": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities."
                            },
                            "fullDescription": {
                                "text": "Avoid using insecure deserialization library, backed by `pickle`, `_pickle`, `cpickle`, `dill`, `shelve`, or `yaml`, which are known to lead to remote code execution vulnerabilities."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.header-redefinition.header-redefinition",
                            "name": "generic.nginx.security.header-redefinition.header-redefinition",
                            "shortDescription": {
                                "text": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block."
                            },
                            "fullDescription": {
                                "text": "The 'add_header' directive is called in a 'location' block after headers have been set at the server block. Calling 'add_header' in the location block will actually overwrite the headers defined in the server block, no matter which headers are set. To fix this, explicitly set all headers or set all headers in the server block."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.no-null-cipher.no-null-cipher",
                            "name": "java.lang.security.audit.crypto.no-null-cipher.no-null-cipher",
                            "shortDescription": {
                                "text": "NullCipher was detected. This will not encrypt anything;\nthe cipher text will be the same as the plain text. Use\na valid, secure cipher: Cipher.getInstance(\"AES/CBC/PKCS7PADDING\").\nSee https://owasp.org/www-community/Using_the_Java_Cryptographic_Extensions\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "NullCipher was detected. This will not encrypt anything;\nthe cipher text will be the same as the plain text. Use\na valid, secure cipher: Cipher.getInstance(\"AES/CBC/PKCS7PADDING\").\nSee https://owasp.org/www-community/Using_the_Java_Cryptographic_Extensions\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.avoid-mark-safe.avoid-mark-safe",
                            "name": "python.django.security.audit.avoid-mark-safe.avoid-mark-safe",
                            "shortDescription": {
                                "text": "'mark_safe()' is used to mark a string as \"safe\" for HTML output.\nThis disables escaping and could therefore subject the content to\nXSS attacks. Use 'django.utils.html.format_html()' to build HTML\nfor rendering instead.\n"
                            },
                            "fullDescription": {
                                "text": "'mark_safe()' is used to mark a string as \"safe\" for HTML output.\nThis disables escaping and could therefore subject the content to\nXSS attacks. Use 'django.utils.html.format_html()' to build HTML\nfor rendering instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-Site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.bad_imports.insecure-module-used",
                            "name": "go.lang.security.audit.crypto.bad_imports.insecure-module-used",
                            "shortDescription": {
                                "text": "Detected use of an insecure cryptographic hashing method. This method is known to be broken and easily compromised. Use SHA256 or SHA3 instead."
                            },
                            "fullDescription": {
                                "text": "Detected use of an insecure cryptographic hashing method. This method is known to be broken and easily compromised. Use SHA256 or SHA3 instead."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
                            "name": "javascript.jsonwebtoken.security.jwt-hardcode.hardcoded-jwt-secret",
                            "shortDescription": {
                                "text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"
                            },
                            "fullDescription": {
                                "text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-522: Insufficiently Protected Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.injection.email.xss-send-mail-html-message.xss-send-mail-html-message",
                            "name": "python.django.security.injection.email.xss-send-mail-html-message.xss-send-mail-html-message",
                            "shortDescription": {
                                "text": "Found request data in 'send_mail(...)' that uses 'html_message'.\nThis is dangerous because HTML emails are susceptible to XSS.\nAn attacker could inject data into this HTML email, causing XSS.\n"
                            },
                            "fullDescription": {
                                "text": "Found request data in 'send_mail(...)' that uses 'html_message'.\nThis is dangerous because HTML emails are susceptible to XSS.\nAn attacker could inject data into this HTML email, causing XSS.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.mako-templates-detected.mako-templates-detected",
                            "name": "python.lang.security.audit.mako-templates-detected.mako-templates-detected",
                            "shortDescription": {
                                "text": "Mako templates do not provide a global HTML escaping mechanism.\nThis means you must escape all sensitive data in your templates\nusing '| u' for URL escaping or '| h' for HTML escaping.\nIf you are using Mako to serve web content, consider using\na system such as Jinja2 which enables global escaping.\n"
                            },
                            "fullDescription": {
                                "text": "Mako templates do not provide a global HTML escaping mechanism.\nThis means you must escape all sensitive data in your templates\nusing '| u' for URL escaping or '| h' for HTML escaping.\nIf you are using Mako to serve web content, consider using\na system such as Jinja2 which enables global escaping.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-Site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-rc2",
                            "name": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-rc2",
                            "shortDescription": {
                                "text": "Detected RC2 cipher algorithm which is considered insecure. The algorithm has known vulnerabilities and is difficult to use securely. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected RC2 cipher algorithm which is considered insecure. The algorithm has known vulnerabilities and is difficult to use securely. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "go.jwt-go.security.jwt.hardcoded-jwt-key",
                            "name": "go.jwt-go.security.jwt.hardcoded-jwt-key",
                            "shortDescription": {
                                "text": "JWT token is hardcoded"
                            },
                            "fullDescription": {
                                "text": "JWT token is hardcoded"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-798: Use of Hard-coded Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.no-static-initialization-vector.no-static-initialization-vector",
                            "name": "java.lang.security.audit.crypto.no-static-initialization-vector.no-static-initialization-vector",
                            "shortDescription": {
                                "text": "Initialization Vectors (IVs) for block ciphers should be randomly generated\neach time they are used. Using a static IV means the same plaintext\nencrypts to the same ciphertext every time, weakening the strength\nof the encryption.\n"
                            },
                            "fullDescription": {
                                "text": "Initialization Vectors (IVs) for block ciphers should be randomly generated\neach time they are used. Using a static IV means the same plaintext\nencrypts to the same ciphertext every time, weakening the strength\nof the encryption.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-329: Not Using a Random IV with CBC Mode",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.network.http-not-https-connection.http-not-https-connection",
                            "name": "python.lang.security.audit.network.http-not-https-connection.http-not-https-connection",
                            "shortDescription": {
                                "text": "Detected HTTPConnectionPool. This will transmit data in cleartext.\nIt is recommended to use HTTPSConnectionPool instead for to encrypt\ncommunications.\n"
                            },
                            "fullDescription": {
                                "text": "Detected HTTPConnectionPool. This will transmit data in cleartext.\nIt is recommended to use HTTPSConnectionPool instead for to encrypt\ncommunications.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-319: Cleartext Transmission of Sensitive Information",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-des",
                            "name": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-des",
                            "shortDescription": {
                                "text": "Detected DES cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected DES cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.xss.template-autoescape-off.template-autoescape-off",
                            "name": "python.django.security.audit.xss.template-autoescape-off.template-autoescape-off",
                            "shortDescription": {
                                "text": "Detected a template block where autoescaping is explicitly\ndisabled with '{% autoescape off %}'. This allows rendering of raw HTML\nin this segment. Turn autoescaping on to prevent cross-site scripting (XSS).\nIf you must do this, consider instead, using `mark_safe` in Python code.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a template block where autoescaping is explicitly\ndisabled with '{% autoescape off %}'. This allows rendering of raw HTML\nin this segment. Turn autoescaping on to prevent cross-site scripting (XSS).\nIf you must do this, consider instead, using `mark_safe` in Python code.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.injection.code.user-eval.user-eval",
                            "name": "python.django.security.injection.code.user-eval.user-eval",
                            "shortDescription": {
                                "text": "Found user data in a call to 'eval'. This is extremely dangerous because\nit can enable an attacker to execute remote code. See\nhttps://owasp.org/www-community/attacks/Code_Injection for more information\n"
                            },
                            "fullDescription": {
                                "text": "Found user data in a call to 'eval'. This is extremely dangerous because\nit can enable an attacker to execute remote code. See\nhttps://owasp.org/www-community/attacks/Code_Injection for more information\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.insecure-hash-function.insecure-hash-function",
                            "name": "python.lang.security.insecure-hash-function.insecure-hash-function",
                            "shortDescription": {
                                "text": "Detected use of an insecure MD4 or MD5 hash function.\nThese functions have known vulnerabilities and are considered deprecated.\nConsider using 'SHA256' or a similar function instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected use of an insecure MD4 or MD5 hash function.\nThese functions have known vulnerabilities and are considered deprecated.\nConsider using 'SHA256' or a similar function instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "generic.html-templates.security.var-in-href.var-in-href",
                            "name": "generic.html-templates.security.var-in-href.var-in-href",
                            "shortDescription": {
                                "text": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header."
                            },
                            "fullDescription": {
                                "text": "Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var",
                            "name": "generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var",
                            "shortDescription": {
                                "text": "Detected a unquoted template variable as an attribute. If unquoted, a malicious actor could inject custom JavaScript handlers. To fix this, add quotes around the template expression, like this: \"{{ expr }}\"."
                            },
                            "fullDescription": {
                                "text": "Detected a unquoted template variable as an attribute. If unquoted, a malicious actor could inject custom JavaScript handlers. To fix this, add quotes around the template expression, like this: \"{{ expr }}\"."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.xssrequestwrapper-is-insecure.xssrequestwrapper-is-insecure",
                            "name": "java.lang.security.audit.xssrequestwrapper-is-insecure.xssrequestwrapper-is-insecure",
                            "shortDescription": {
                                "text": "It looks like you're using an implementation of XSSRequestWrapper from dzone.\n(https://www.javacodegeeks.com/2012/07/anti-cross-site-scripting-xss-filter.html)\nThe XSS filtering in this code is not secure and can be bypassed by malicious actors.\nIt is recommended to use a stack that automatically escapes in your view or templates\ninstead of filtering yourself.\n"
                            },
                            "fullDescription": {
                                "text": "It looks like you're using an implementation of XSSRequestWrapper from dzone.\n(https://www.javacodegeeks.com/2012/07/anti-cross-site-scripting-xss-filter.html)\nThe XSS filtering in this code is not secure and can be bypassed by malicious actors.\nIt is recommended to use a stack that automatically escapes in your view or templates\ninstead of filtering yourself.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-Site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.eval-detected.eval-detected",
                            "name": "python.lang.security.audit.eval-detected.eval-detected",
                            "shortDescription": {
                                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate\ndynamic content. If this content can be input from outside the program, this\nmay be a code injection vulnerability. Ensure evaluated content is not definable\nby external sources.\n"
                            },
                            "fullDescription": {
                                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate\ndynamic content. If this content can be input from outside the program, this\nmay be a code injection vulnerability. Ensure evaluated content is not definable\nby external sources.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.force-ssl-false.force-ssl-false",
                            "name": "ruby.lang.security.force-ssl-false.force-ssl-false",
                            "shortDescription": {
                                "text": "Checks for configuration setting of force_ssl to false. Force_ssl forces usage of HTTPS, which\ncould lead to network interception of unencrypted application traffic. To fix, set config.force_ssl = true.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for configuration setting of force_ssl to false. Force_ssl forces usage of HTTPS, which\ncould lead to network interception of unencrypted application traffic. To fix, set config.force_ssl = true.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.lang.security.unverified-ssl-context.unverified-ssl-context",
                            "name": "python.lang.security.unverified-ssl-context.unverified-ssl-context",
                            "shortDescription": {
                                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
                            },
                            "fullDescription": {
                                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-295: Improper Certificate Validation",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.insecure-use-strtok-fn.insecure-use-strtok-fn",
                            "name": "c.lang.security.insecure-use-strtok-fn.insecure-use-strtok-fn",
                            "shortDescription": {
                                "text": "Avoid using 'strtok()'. This function directly modifies the first argument buffer, permanently erasing the\ndelimiter character. Use 'strtok_r()' instead.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using 'strtok()'. This function directly modifies the first argument buffer, permanently erasing the\ndelimiter character. Use 'strtok_r()' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host",
                            "name": "python.flask.security.audit.app-run-param-config.avoid_app_run_with_bad_host",
                            "shortDescription": {
                                "text": "Running flask app with host 0.0.0.0 could expose the server publicly."
                            },
                            "fullDescription": {
                                "text": "Running flask app with host 0.0.0.0 could expose the server publicly."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-668: Exposure of Resource to Wrong Sphere",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host-key",
                            "name": "go.lang.security.audit.crypto.insecure_ssh.avoid-ssh-insecure-ignore-host-key",
                            "shortDescription": {
                                "text": "Disabled host key verification detected. This allows man-in-the-middle\nattacks. Use the 'golang.org/x/crypto/ssh/knownhosts' package to do\nhost key verification.\nSee https://skarlso.github.io/2019/02/17/go-ssh-with-host-key-verification/\nto learn more about the problem and how to fix it.\n"
                            },
                            "fullDescription": {
                                "text": "Disabled host key verification detected. This allows man-in-the-middle\nattacks. Use the 'golang.org/x/crypto/ssh/knownhosts' package to do\nhost key verification.\nSee https://skarlso.github.io/2019/02/17/go-ssh-with-host-key-verification/\nto learn more about the problem and how to fix it.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-322: Key Exchange without Entity Authentication",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.deserialization.pickle.avoid-dill",
                            "name": "python.lang.security.deserialization.pickle.avoid-dill",
                            "shortDescription": {
                                "text": "Avoid using `dill`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using `dill`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "javascript.xml2json.security.audit.xml2json-xxe.xml2json-xxe",
                            "name": "javascript.xml2json.security.audit.xml2json-xxe.xml2json-xxe",
                            "shortDescription": {
                                "text": "If unverified user data can reach the XML Parser it can result in XML External or\nInternal Entity (XXE) Processing vulnerabilities\n"
                            },
                            "fullDescription": {
                                "text": "If unverified user data can reach the XML Parser it can result in XML External or\nInternal Entity (XXE) Processing vulnerabilities\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-611: Improper Restriction of XML External Entity Reference",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.xml-decoder.xml-decoder",
                            "name": "java.lang.security.audit.xml-decoder.xml-decoder",
                            "shortDescription": {
                                "text": "XMLDecoder should not be used to parse untrusted data.\nDeserializing user input can lead to arbitrary code execution.\nUse an alternative and explicitly disable external entities.\nSee https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html\nfor alternatives and vulnerability prevention.\n"
                            },
                            "fullDescription": {
                                "text": "XMLDecoder should not be used to parse untrusted data.\nDeserializing user input can lead to arbitrary code execution.\nUse an alternative and explicitly disable external entities.\nSee https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html\nfor alternatives and vulnerability prevention.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-611: Improper Restriction of XML External Entity Reference",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.insecure-use-scanf-fn.insecure-use-scanf-fn",
                            "name": "c.lang.security.insecure-use-scanf-fn.insecure-use-scanf-fn",
                            "shortDescription": {
                                "text": "Avoid using 'scanf()'. This function, when used improperly, does not consider\nbuffer boundaries and can lead to buffer overflows. Use 'fgets()' instead\nfor reading input.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using 'scanf()'. This function, when used improperly, does not consider\nbuffer boundaries and can lead to buffer overflows. Use 'fgets()' instead\nfor reading input.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.lang.security.audit.paramiko-implicit-trust-host-key.paramiko-implicit-trust-host-key",
                            "name": "python.lang.security.audit.paramiko-implicit-trust-host-key.paramiko-implicit-trust-host-key",
                            "shortDescription": {
                                "text": "Detected a paramiko host key policy that implicitly trusts a server's\nhost key. Host keys should be verified to ensure the connection\nis not to a malicious server. Use RejectPolicy or a custom subclass\ninstead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a paramiko host key policy that implicitly trusts a server's\nhost key. Host keys should be verified to ensure the connection\nis not to a malicious server. Use RejectPolicy or a custom subclass\ninstead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-322: Key Exchange without Entity Authentication",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.xss.context-autoescape-off.context-autoescape-off",
                            "name": "python.django.security.audit.xss.context-autoescape-off.context-autoescape-off",
                            "shortDescription": {
                                "text": "Detected a Context with autoescape diabled. If you are\nrendering any web pages, this exposes your application to cross-site\nscripting (XSS) vulnerabilities. Remove 'autoescape: False' or set it\nto 'True'.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a Context with autoescape diabled. If you are\nrendering any web pages, this exposes your application to cross-site\nscripting (XSS) vulnerabilities. Remove 'autoescape: False' or set it\nto 'True'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_SECRET_KEY",
                            "name": "python.flask.security.audit.hardcoded-config.avoid_hardcoded_config_SECRET_KEY",
                            "shortDescription": {
                                "text": "Hardcoded variable `SECRET_KEY` detected. Use environment variables or config files instead"
                            },
                            "fullDescription": {
                                "text": "Hardcoded variable `SECRET_KEY` detected. Use environment variables or config files instead"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-798: Use of Hard-coded Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                            "name": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                            "shortDescription": {
                                "text": "Found 'subprocess' function '$FUNC' with 'shell=True'. This is dangerous because this call will spawn\nthe command using a shell process. Doing so propagates current shell settings and variables, which\nmakes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.\n"
                            },
                            "fullDescription": {
                                "text": "Found 'subprocess' function '$FUNC' with 'shell=True'. This is dangerous because this call will spawn\nthe command using a shell process. Doing so propagates current shell settings and variables, which\nmakes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.ssl-wrap-socket-is-deprecated.ssl-wrap-socket-is-deprecated",
                            "name": "python.lang.security.audit.ssl-wrap-socket-is-deprecated.ssl-wrap-socket-is-deprecated",
                            "shortDescription": {
                                "text": "'ssl.wrap_socket()' is deprecated. This function creates an insecure socket\nwithout server name indication or hostname matching. Instead, create an SSL\ncontext using 'ssl.SSLContext()' and use that to wrap a socket.\n"
                            },
                            "fullDescription": {
                                "text": "'ssl.wrap_socket()' is deprecated. This function creates an insecure socket\nwithout server name indication or hostname matching. Instead, create an SSL\ncontext using 'ssl.SSLContext()' and use that to wrap a socket.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.system-wildcard-detected.system-wildcard-detected",
                            "name": "python.lang.security.audit.system-wildcard-detected.system-wildcard-detected",
                            "shortDescription": {
                                "text": "Detected use of the wildcard character in a system call that spawns a shell.\nThis subjects the wildcard to normal shell expansion, which can have unintended consequences\nif there exist any non-standard file names. Consider a file named '-e sh script.sh' -- this\nwill execute a script when 'rsync' is called. See\nhttps://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "Detected use of the wildcard character in a system call that spawns a shell.\nThis subjects the wildcard to normal shell expansion, which can have unintended consequences\nif there exist any non-standard file names. Consider a file named '-e sh script.sh' -- this\nwill execute a script when 'rsync' is called. See\nhttps://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-155: Improper Neutralization of Wildcards or Matching Symbols",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "json.aws.security.public-s3-policy-statement.public-s3-policy-statement",
                            "name": "json.aws.security.public-s3-policy-statement.public-s3-policy-statement",
                            "shortDescription": {
                                "text": "Detected public s3 bucket policy. This policy allows anyone to access\ncertain properties of or items in the bucket. Do not do this unless you\nwill never have sensitive data inside the bucket.\n"
                            },
                            "fullDescription": {
                                "text": "Detected public s3 bucket policy. This policy allows anyone to access\ncertain properties of or items in the bucket. Do not do this unless you\nwill never have sensitive data inside the bucket.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-264 - Permissions, Privileges, and Access Controls",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "go.otto.security.audit.dangerous-execution.dangerous-execution",
                            "name": "go.otto.security.audit.dangerous-execution.dangerous-execution",
                            "shortDescription": {
                                "text": "Detected non-static script inside otto VM. Audit the input to 'VM.Run'.\nIf unverified user data can reach this call site, this is a code injection\nvulnerability. A malicious actor can inject a malicious script to execute\narbitrary code.\n"
                            },
                            "fullDescription": {
                                "text": "Detected non-static script inside otto VM. Audit the input to 'VM.Run'.\nIf unverified user data can reach this call site, this is a code injection\nvulnerability. A malicious actor can inject a malicious script to execute\narbitrary code.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-94: Improper Control of Generation of Code ('Code Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.wip-xss-using-responsewriter-and-printf.wip-xss-using-responsewriter-and-printf",
                            "name": "go.lang.security.audit.net.wip-xss-using-responsewriter-and-printf.wip-xss-using-responsewriter-and-printf",
                            "shortDescription": {
                                "text": "Found data going from url query parameters into formatted data written to ResponseWriter.\nThis could be XSS and should not be done. If you must do this, ensure your data is\nsanitized or escaped.\n"
                            },
                            "fullDescription": {
                                "text": "Found data going from url query parameters into formatted data written to ResponseWriter.\nThis could be XSS and should not be done. If you must do this, ensure your data is\nsanitized or escaped.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-Site Scripting ('XSS')"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-md4",
                            "name": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-md4",
                            "shortDescription": {
                                "text": "Detected MD4 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected MD4 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.unquoted-csv-writer.unquoted-csv-writer",
                            "name": "python.lang.security.unquoted-csv-writer.unquoted-csv-writer",
                            "shortDescription": {
                                "text": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'."
                            },
                            "fullDescription": {
                                "text": "Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-1236: Improper Neutralization of Formula Elements in a CSV File",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-blowfish",
                            "name": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-blowfish",
                            "shortDescription": {
                                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.insecure-use-gets-fn.insecure-use-gets-fn",
                            "name": "c.lang.security.insecure-use-gets-fn.insecure-use-gets-fn",
                            "shortDescription": {
                                "text": "Avoid 'gets()'. This function does not consider buffer boundaries and can lead\nto buffer overflows. Use 'fgets()' or 'gets_s()' instead.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid 'gets()'. This function does not consider buffer boundaries and can lead\nto buffer overflows. Use 'fgets()' or 'gets_s()' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "c.lang.security.insecure-use-string-copy-fn.insecure-use-string-copy-fn",
                            "name": "c.lang.security.insecure-use-string-copy-fn.insecure-use-string-copy-fn",
                            "shortDescription": {
                                "text": "Finding triggers whenever there is a strcpy or strncpy used.\nThis is an issue because strcpy or strncpy can lead to buffer overflow vulns.\nFix this by using strcpy_s instead.\n"
                            },
                            "fullDescription": {
                                "text": "Finding triggers whenever there is a strcpy or strncpy used.\nThis is an issue because strcpy or strncpy can lead to buffer overflow vulns.\nFix this by using strcpy_s instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "go.lang.security.audit.unsafe.use-of-unsafe-block",
                            "name": "go.lang.security.audit.unsafe.use-of-unsafe-block",
                            "shortDescription": {
                                "text": "Using the unsafe package in Go gives you low-level memory management and many of the strengths of the C language but also gives flexibility to the attacker of your application."
                            },
                            "fullDescription": {
                                "text": "Using the unsafe package in Go gives you low-level memory management and many of the strengths of the C language but also gives flexibility to the attacker of your application."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-242: Use of Inherently Dangerous Function"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.create-with.create-with",
                            "name": "ruby.lang.security.create-with.create-with",
                            "shortDescription": {
                                "text": "Checks for strong parameter bypass through usage of create_with. Create_with bypasses strong parameter protection, which\ncould allow attackers to set arbitrary attributes on models. To fix this vulnerability, either remove all create_with calls\nor use the permit function to specify tags that are allowed to be set.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for strong parameter bypass through usage of create_with. Create_with bypasses strong parameter protection, which\ncould allow attackers to set arbitrary attributes on models. To fix this vulnerability, either remove all create_with calls\nor use the permit function to specify tags that are allowed to be set.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.ldap-entry-poisoning.ldap-entry-poisoning",
                            "name": "java.lang.security.audit.ldap-entry-poisoning.ldap-entry-poisoning",
                            "shortDescription": {
                                "text": "An object-returning LDAP search will allow attackers to control the LDAP response. This could\nlead to Remote Code Execution.\n"
                            },
                            "fullDescription": {
                                "text": "An object-returning LDAP search will allow attackers to control the LDAP response. This could\nlead to Remote Code Execution.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe",
                            "name": "python.flask.security.xss.audit.template-unescaped-with-safe.template-unescaped-with-safe",
                            "shortDescription": {
                                "text": "Detected a segment of a Flask template where autoescaping is explicitly disabled with '| safe' filter. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability."
                            },
                            "fullDescription": {
                                "text": "Detected a segment of a Flask template where autoescaping is explicitly disabled with '| safe' filter. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-md2",
                            "name": "python.pycryptodome.security.insecure-hash-algorithm.insecure-hash-algorithm-md2",
                            "shortDescription": {
                                "text": "Detected MD2 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected MD2 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
                            "name": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
                            "shortDescription": {
                                "text": "Detected a formatted string in a SQL statement. This could lead to SQL\ninjection if variables in the SQL statement are not properly sanitized.\nUse a prepared statements (java.sql.PreparedStatement) instead. You\ncan obtain a PreparedStatement using 'connection.prepareStatement'.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a formatted string in a SQL statement. This could lead to SQL\ninjection if variables in the SQL statement are not properly sanitized.\nUse a prepared statements (java.sql.PreparedStatement) instead. You\ncan obtain a PreparedStatement using 'connection.prepareStatement'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.injection.code.user-exec.user-exec",
                            "name": "python.django.security.injection.code.user-exec.user-exec",
                            "shortDescription": {
                                "text": "Found user data in a call to 'exec'. This is extremely dangerous because\nit can enable an attacker to execute remote code. See\nhttps://owasp.org/www-community/attacks/Code_Injection for more information.\n"
                            },
                            "fullDescription": {
                                "text": "Found user data in a call to 'exec'. This is extremely dangerous because\nit can enable an attacker to execute remote code. See\nhttps://owasp.org/www-community/attacks/Code_Injection for more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.random-fd-exhaustion.random-fd-exhaustion",
                            "name": "c.lang.security.random-fd-exhaustion.random-fd-exhaustion",
                            "shortDescription": {
                                "text": "Call to 'read()' without error checking is susceptible to file descriptor\nexhaustion. Consider using the 'getrandom()' function.\n"
                            },
                            "fullDescription": {
                                "text": "Call to 'read()' without error checking is susceptible to file descriptor\nexhaustion. Consider using the 'getrandom()' function.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.http-response-splitting.http-response-splitting",
                            "name": "java.lang.security.audit.http-response-splitting.http-response-splitting",
                            "shortDescription": {
                                "text": "Older Java application servers are vulnreable to HTTP response splitting, which may occur if an HTTP\nrequest can be injected with CRLF characters. This finding is reported for completeness; it is recommended\nto ensure your environment is not affected by testing this yourself.\n"
                            },
                            "fullDescription": {
                                "text": "Older Java application servers are vulnreable to HTTP response splitting, which may occur if an HTTP\nrequest can be injected with CRLF characters. This finding is reported for completeness; it is recommended\nto ensure your environment is not affected by testing this yourself.\n"
                            },
                            "defaultConfiguration": {
                                "level": "note"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
                            "name": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
                            "shortDescription": {
                                "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag\nfor cookies prevents the client from transmitting the cookie over insecure\nchannels such as HTTP. Set the 'secure' flag by calling '$COOKIE.setSecure(true);'\n"
                            },
                            "fullDescription": {
                                "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag\nfor cookies prevents the client from transmitting the cookie over insecure\nchannels such as HTTP. Set the 'secure' flag by calling '$COOKIE.setSecure(true);'\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "javascript.jsonwebtoken.security.jwt-exposed-credentials.jwt-exposed-credentials",
                            "name": "javascript.jsonwebtoken.security.jwt-exposed-credentials.jwt-exposed-credentials",
                            "shortDescription": {
                                "text": "Password is exposed through JWT token payload. This is not encrypted and\nthe password could be compromised. Do not store passwords in JWT tokens.\n"
                            },
                            "fullDescription": {
                                "text": "Password is exposed through JWT token payload. This is not encrypted and\nthe password could be compromised. Do not store passwords in JWT tokens.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-522: Insufficiently Protected Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "python.jinja2.security.audit.autoescape-disabled.autoescape-disabled",
                            "name": "python.jinja2.security.audit.autoescape-disabled.autoescape-disabled",
                            "shortDescription": {
                                "text": "Detected a Jinja2 environment without autoescaping. Jinja2 does not autoescape by default. This is dangerous if you are rendering to a browser because this allows for cross-site scripting (XSS) attacks. If you are in a web context, enable autoescaping by setting 'autoescape=True.' You may also consider using 'jinja2.select_autoescape()' to only enable automatic escaping for certain file extensions."
                            },
                            "fullDescription": {
                                "text": "Detected a Jinja2 environment without autoescaping. Jinja2 does not autoescape by default. This is dangerous if you are rendering to a browser because this allows for cross-site scripting (XSS) attacks. If you are in a web context, enable autoescaping by setting 'autoescape=True.' You may also consider using 'jinja2.select_autoescape()' to only enable automatic escaping for certain file extensions."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-116: Improper Encoding or Escaping of Output",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-sha1",
                            "name": "go.lang.security.audit.crypto.use_of_weak_crypto.use-of-sha1",
                            "shortDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
                            "name": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
                            "shortDescription": {
                                "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag\nfor cookies instructs the browser to forbid client-side scripts from reading the\ncookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'\n"
                            },
                            "fullDescription": {
                                "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag\nfor cookies instructs the browser to forbid client-side scripts from reading the\ncookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.unescaped-data-in-js.unescaped-data-in-js",
                            "name": "go.lang.security.audit.net.unescaped-data-in-js.unescaped-data-in-js",
                            "shortDescription": {
                                "text": "Found a formatted template string passed to 'template.JS()'.\n'template.JS()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template.\n"
                            },
                            "fullDescription": {
                                "text": "Found a formatted template string passed to 'template.JS()'.\n'template.JS()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.insecure-use-printf-fn.insecure-use-printf-fn",
                            "name": "c.lang.security.insecure-use-printf-fn.insecure-use-printf-fn",
                            "shortDescription": {
                                "text": "Avoid using user-controlled format strings passed into 'sprintf', 'printf' and 'vsprintf'.\nThese functions put you at risk of buffer overflow vulnerabilities through the use of format string exploits.\nInstead, use 'snprintf' and 'vsnprintf'.\n"
                            },
                            "fullDescription": {
                                "text": "Avoid using user-controlled format strings passed into 'sprintf', 'printf' and 'vsprintf'.\nThese functions put you at risk of buffer overflow vulnerabilities through the use of format string exploits.\nInstead, use 'snprintf' and 'vsnprintf'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "generic.nginx.security.missing-internal.missing-internal",
                            "name": "generic.nginx.security.missing-internal.missing-internal",
                            "shortDescription": {
                                "text": "This location block contains a 'proxy_pass' directive but does not contain the 'internal' directive. The 'internal' directive restricts access to this location to internal requests. Without 'internal', an attacker could use your server for server-side request forgeries (SSRF). Include the 'internal' directive in this block to limit exposure."
                            },
                            "fullDescription": {
                                "text": "This location block contains a 'proxy_pass' directive but does not contain the 'internal' directive. The 'internal' directive restricts access to this location to internal requests. Without 'internal', an attacker could use your server for server-side request forgeries (SSRF). Include the 'internal' directive in this block to limit exposure."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "go.lang.security.audit.crypto.math_random.math-random-used",
                            "name": "go.lang.security.audit.crypto.math_random.math-random-used",
                            "shortDescription": {
                                "text": "Do not use `math/rand`. Use `crypto/rand` instead."
                            },
                            "fullDescription": {
                                "text": "Do not use `math/rand`. Use `crypto/rand` instead."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "typescript.react.security.react-markdown-insecure-html.react-markdown-insecure-html",
                            "name": "typescript.react.security.react-markdown-insecure-html.react-markdown-insecure-html",
                            "shortDescription": {
                                "text": "Overwriting `transformLinkUri` or `transformImageUri` to something insecure or turning `allowDangerousHtml` on, will open code up to XSS vectors.\n"
                            },
                            "fullDescription": {
                                "text": "Overwriting `transformLinkUri` or `transformImageUri` to something insecure or turning `allowDangerousHtml` on, will open code up to XSS vectors.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.injection.command.command-injection-os-system.command-injection-os-system",
                            "name": "python.django.security.injection.command.command-injection-os-system.command-injection-os-system",
                            "shortDescription": {
                                "text": "Request data detected in os.system. This could be vulnerable to a command injection and should be avoided. If this must be done, use the 'subprocess' module instead and pass the arguments as a list. See https://owasp.org/www-community/attacks/Command_Injection for more information."
                            },
                            "fullDescription": {
                                "text": "Request data detected in os.system. This could be vulnerable to a command injection and should be avoided. If this must be done, use the 'subprocess' module instead and pass the arguments as a list. See https://owasp.org/www-community/attacks/Command_Injection for more information."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.no-eval.ruby-eval",
                            "name": "ruby.lang.security.no-eval.ruby-eval",
                            "shortDescription": {
                                "text": "Use of eval detected. This can run arbitrary code. Ensure external data\ndoes not reach here, otherwise this is a security vulnerability.\nConsider other ways to do this without eval.\n"
                            },
                            "fullDescription": {
                                "text": "Use of eval detected. This can run arbitrary code. Ensure external data\ndoes not reach here, otherwise this is a security vulnerability.\nConsider other ways to do this without eval.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
                            "name": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
                            "shortDescription": {
                                "text": "Detected cookie without the SameSite attribute.\n"
                            },
                            "fullDescription": {
                                "text": "Detected cookie without the SameSite attribute.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-352: Cross-Site Request Forgery (CSRF)",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "go.grpc.security.grpc-server-insecure-connection.grpc-server-insecure-connection",
                            "name": "go.grpc.security.grpc-server-insecure-connection.grpc-server-insecure-connection",
                            "shortDescription": {
                                "text": "Found an insecure gRPC server without 'grpc.Creds()' or options with credentials. This allows for a connection without encryption to this server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Include credentials derived from an SSL certificate in order to create a secure gRPC connection. You can create credentials using 'credentials.NewServerTLSFromFile(\"cert.pem\", \"cert.key\")'."
                            },
                            "fullDescription": {
                                "text": "Found an insecure gRPC server without 'grpc.Creds()' or options with credentials. This allows for a connection without encryption to this server. A malicious attacker could tamper with the gRPC message, which could compromise the machine. Include credentials derived from an SSL certificate in order to create a secure gRPC connection. You can create credentials using 'credentials.NewServerTLSFromFile(\"cert.pem\", \"cert.key\")'."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-300: Channel Accessible by Non-Endpoint"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.script-engine-injection.script-engine-injection",
                            "name": "java.lang.security.audit.script-engine-injection.script-engine-injection",
                            "shortDescription": {
                                "text": "Detected potential code injection using ScriptEngine. Ensure\nuser-controlled data cannot enter '.eval()', otherwise, this is\na code injection vulnerability.\n"
                            },
                            "fullDescription": {
                                "text": "Detected potential code injection using ScriptEngine. Ensure\nuser-controlled data cannot enter '.eval()', otherwise, this is\na code injection vulnerability.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-94: Improper Control of Generation of Code ('Code Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.detect-child-process.detect-child-process",
                            "name": "javascript.lang.security.detect-child-process.detect-child-process",
                            "shortDescription": {
                                "text": "Detected non-literal calls to $EXEC(). This could lead to a command\ninjection vulnerability.\n"
                            },
                            "fullDescription": {
                                "text": "Detected non-literal calls to $EXEC(). This could lead to a command\ninjection vulnerability.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.unvalidated-password.unvalidated-password",
                            "name": "python.django.security.audit.unvalidated-password.unvalidated-password",
                            "shortDescription": {
                                "text": "The password on '$MODEL' is being set without validating the password.\nCall django.contrib.auth.password_validation.validate_password() with\nvalidation functions before setting the password. See\nhttps://docs.djangoproject.com/en/3.0/topics/auth/passwords/\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "The password on '$MODEL' is being set without validating the password.\nCall django.contrib.auth.password_validation.validate_password() with\nvalidation functions before setting the password. See\nhttps://docs.djangoproject.com/en/3.0/topics/auth/passwords/\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-521: Weak Password Requirements",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.open-redirect.open-redirect",
                            "name": "python.flask.security.open-redirect.open-redirect",
                            "shortDescription": {
                                "text": "Data from request is passed to redirect().\nThis is an open redirect and could be exploited.\nConsider using 'url_for()' to generate links to known locations.\nIf you must use a URL to unknown pages, consider using 'urlparse()'\nor similar and checking if the 'netloc' property is the same as\nyour site's host name. See the references for more information.\n"
                            },
                            "fullDescription": {
                                "text": "Data from request is passed to redirect().\nThis is an open redirect and could be exploited.\nConsider using 'url_for()' to generate links to known locations.\nIf you must use a URL to unknown pages, consider using 'urlparse()'\nor similar and checking if the 'netloc' property is the same as\nyour site's host name. See the references for more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.requests.security.no-auth-over-http.no-auth-over-http",
                            "name": "python.requests.security.no-auth-over-http.no-auth-over-http",
                            "shortDescription": {
                                "text": "Authentication detected over HTTP. HTTP does not provide any\nencryption or protection for these authentication credentials.\nThis may expose these credentials to unauthhorized parties.\nUse 'https://' instead.\n"
                            },
                            "fullDescription": {
                                "text": "Authentication detected over HTTP. HTTP does not provide any\nencryption or protection for these authentication credentials.\nThis may expose these credentials to unauthhorized parties.\nUse 'https://' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-523: Unprotected Transport of Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1",
                            "name": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1",
                            "shortDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.divide-by-zero.divide-by-zero",
                            "name": "ruby.lang.security.divide-by-zero.divide-by-zero",
                            "shortDescription": {
                                "text": "Checks for divide by zero. Best practice involves not dividing a variable by zero, as this leads to a Ruby\nZeroDivisionError.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for divide by zero. Best practice involves not dividing a variable by zero, as this leads to a Ruby\nZeroDivisionError.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "go.lang.security.audit.database.string-formatted-query.string-formatted-query",
                            "name": "go.lang.security.audit.database.string-formatted-query.string-formatted-query",
                            "shortDescription": {
                                "text": "String-formatted SQL query detected. This could lead to SQL injection if\nthe string is not sanitized properly. Audit this call to ensure the\nSQL is not manipulatable by external data.\n"
                            },
                            "fullDescription": {
                                "text": "String-formatted SQL query detected. This could lead to SQL injection if\nthe string is not sanitized properly. Audit this call to ensure the\nSQL is not manipulatable by external data.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.hardcoded-password-default-argument.hardcoded-password-default-argument",
                            "name": "python.lang.security.audit.hardcoded-password-default-argument.hardcoded-password-default-argument",
                            "shortDescription": {
                                "text": "Hardcoded password is used as a default argument to '$FUNC'. This could be dangerous if\na real password is not supplied.\n"
                            },
                            "fullDescription": {
                                "text": "Hardcoded password is used as a default argument to '$FUNC'. This could be dangerous if\na real password is not supplied.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.django.security.audit.xss.template-var-unescaped-with-safeseq.template-var-unescaped-with-safeseq",
                            "name": "python.django.security.audit.xss.template-var-unescaped-with-safeseq.template-var-unescaped-with-safeseq",
                            "shortDescription": {
                                "text": "Detected a template variable where autoescaping is explicitly\ndisabled with '| safeseq' filter. This allows rendering of raw HTML\nin this segment. Ensure no user data is rendered here, otherwise this\nis a cross-site scripting (XSS) vulnerability. If you must do this,\nuse `mark_safe` in your Python code.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a template variable where autoescaping is explicitly\ndisabled with '| safeseq' filter. This allows rendering of raw HTML\nin this segment. Ensure no user data is rendered here, otherwise this\nis a cross-site scripting (XSS) vulnerability. If you must do this,\nuse `mark_safe` in your Python code.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.weak-hash.use-of-md5",
                            "name": "java.lang.security.audit.crypto.weak-hash.use-of-md5",
                            "shortDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.ssl.avoid-implementing-custom-digests.avoid-implementing-custom-digests",
                            "name": "java.lang.security.audit.crypto.ssl.avoid-implementing-custom-digests.avoid-implementing-custom-digests",
                            "shortDescription": {
                                "text": "Cryptographic algorithms are notoriously difficult to get right. By implementing\na custom message digest, you risk introducing security issues into your program.\nUse one of the many sound message digests already available to you:\nMessageDigest sha256Digest = MessageDigest.getInstance(\"SHA256\");\n"
                            },
                            "fullDescription": {
                                "text": "Cryptographic algorithms are notoriously difficult to get right. By implementing\na custom message digest, you risk introducing security issues into your program.\nUse one of the many sound message digests already available to you:\nMessageDigest sha256Digest = MessageDigest.getInstance(\"SHA256\");\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.unvalidated-redirect.unvalidated-redirect",
                            "name": "java.lang.security.audit.unvalidated-redirect.unvalidated-redirect",
                            "shortDescription": {
                                "text": "Application redirects to a destination URL specified by a user-supplied\nparameter that is not validated. This could direct users to malicious locations.\nConsider using an allowlist to validate URLs.\n"
                            },
                            "fullDescription": {
                                "text": "Application redirects to a destination URL specified by a user-supplied\nparameter that is not validated. This could direct users to malicious locations.\nConsider using an allowlist to validate URLs.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.exec-detected.exec-detected",
                            "name": "python.lang.security.audit.exec-detected.exec-detected",
                            "shortDescription": {
                                "text": "Detected the use of exec(). exec() can be dangerous if used to evaluate\ndynamic content. If this content can be input from outside the program, this\nmay be a code injection vulnerability. Ensure evaluated content is not definable\nby external sources.\n"
                            },
                            "fullDescription": {
                                "text": "Detected the use of exec(). exec() can be dangerous if used to evaluate\ndynamic content. If this content can be input from outside the program, this\nmay be a code injection vulnerability. Ensure evaluated content is not definable\nby external sources.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.ssl.insecure-hostname-verifier.insecure-hostname-verifier",
                            "name": "java.lang.security.audit.crypto.ssl.insecure-hostname-verifier.insecure-hostname-verifier",
                            "shortDescription": {
                                "text": "Insecure HostnameVerifier implementation detected. This will accept\nany SSL certificate with any hostname, which creates the possibility\nfor man-in-the-middle attacks.\n"
                            },
                            "fullDescription": {
                                "text": "Insecure HostnameVerifier implementation detected. This will accept\nany SSL certificate with any hostname, which creates the possibility\nfor man-in-the-middle attacks.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-295: Improper Certificate Validation",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "c.lang.security.use-after-free.use-after-free",
                            "name": "c.lang.security.use-after-free.use-after-free",
                            "shortDescription": {
                                "text": "Variable '$VAR' was used after being freed. This can lead to undefined behavior.\n"
                            },
                            "fullDescription": {
                                "text": "Variable '$VAR' was used after being freed. This can lead to undefined behavior.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
                            "name": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
                            "shortDescription": {
                                "text": "DES is considered deprecated. AES is the recommended cipher.\nUpgrade to use AES.\nSee https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information.\n"
                            },
                            "fullDescription": {
                                "text": "DES is considered deprecated. AES is the recommended cipher.\nUpgrade to use AES.\nSee https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.ftplib.ftplib",
                            "name": "python.lang.security.audit.ftplib.ftplib",
                            "shortDescription": {
                                "text": "FTP does not encrypt communications by default. This can lead to sensitive\ndata being exposed. Ensure use of FTP here does not expose sensitive data.\n"
                            },
                            "fullDescription": {
                                "text": "FTP does not encrypt communications by default. This can lead to sensitive\ndata being exposed. Ensure use of FTP here does not expose sensitive data.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-319: Cleartext Transmission of Sensitive Information",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "javascript.node-expat.security.audit.expat-xxe.expat-xxe",
                            "name": "javascript.node-expat.security.audit.expat-xxe.expat-xxe",
                            "shortDescription": {
                                "text": "If unverified user data can reach the XML Parser it can result in XML External or\nInternal Entity (XXE) Processing vulnerabilities\n"
                            },
                            "fullDescription": {
                                "text": "If unverified user data can reach the XML Parser it can result in XML External or\nInternal Entity (XXE) Processing vulnerabilities\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-611: Improper Restriction of XML External Entity Reference",
                                    "OWASP-A4: XML External Entities (XXE)"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag",
                            "name": "javascript.lang.security.audit.unknown-value-with-script-tag.unknown-value-with-script-tag",
                            "shortDescription": {
                                "text": "Cannot determine what '$UNK' is and it is used with a '<script>' tag. This\ncould be susceptible to cross-site scripting (XSS). Ensure '$UNK' is not\nexternally controlled, or sanitize this data.\n"
                            },
                            "fullDescription": {
                                "text": "Cannot determine what '$UNK' is and it is used with a '<script>' tag. This\ncould be susceptible to cross-site scripting (XSS). Ensure '$UNK' is not\nexternally controlled, or sanitize this data.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A7: Cross-site Scripting (XSS)"
                                ]
                            }
                        },
                        {
                            "id": "java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled",
                            "name": "java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled",
                            "shortDescription": {
                                "text": "CSRF is disabled for this configuration. This is a security risk.\n"
                            },
                            "fullDescription": {
                                "text": "CSRF is disabled for this configuration. This is a security risk.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-352: Cross-Site Request Forgery (CSRF)",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crypto.ssl.insecure-trust-manager.insecure-trust-manager",
                            "name": "java.lang.security.audit.crypto.ssl.insecure-trust-manager.insecure-trust-manager",
                            "shortDescription": {
                                "text": "Detected empty trust manager implementations. This is dangerous because it accepts any\ncertificate, enabling man-in-the-middle attacks. Consider using a KeyStore\nand TrustManagerFactory isntead.\nSee https://stackoverflow.com/questions/2642777/trusting-all-certificates-using-httpclient-over-https\nfor more information.\n"
                            },
                            "fullDescription": {
                                "text": "Detected empty trust manager implementations. This is dangerous because it accepts any\ncertificate, enabling man-in-the-middle attacks. Consider using a KeyStore\nand TrustManagerFactory isntead.\nSee https://stackoverflow.com/questions/2642777/trusting-all-certificates-using-httpclient-over-https\nfor more information.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-295: Improper Certificate Validation",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.detect-non-literal-require.detect-non-literal-require",
                            "name": "javascript.lang.security.detect-non-literal-require.detect-non-literal-require",
                            "shortDescription": {
                                "text": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n"
                            },
                            "fullDescription": {
                                "text": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.wtf-csrf-disabled.flask-wtf-csrf-disabled",
                            "name": "python.flask.security.audit.wtf-csrf-disabled.flask-wtf-csrf-disabled",
                            "shortDescription": {
                                "text": "`$APP.config['WTF_CSRF_ENABLED'] = False` is probably not what you want in production because it disables https://flask-wtf.readthedocs.io/en/stable/csrf.html CSRF protection\n"
                            },
                            "fullDescription": {
                                "text": "`$APP.config['WTF_CSRF_ENABLED'] = False` is probably not what you want in production because it disables https://flask-wtf.readthedocs.io/en/stable/csrf.html CSRF protection\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-352: Cross-Site Request Forgery (CSRF)",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.weak-ssl-version.weak-ssl-version",
                            "name": "python.lang.security.audit.weak-ssl-version.weak-ssl-version",
                            "shortDescription": {
                                "text": "An insecure SSL version was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse 'ssl.PROTOCOL_TLSv1_2' or higher.\n"
                            },
                            "fullDescription": {
                                "text": "An insecure SSL version was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse 'ssl.PROTOCOL_TLSv1_2' or higher.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-326: Inadequate Encryption Strength",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.use-tls.use-tls",
                            "name": "go.lang.security.audit.net.use-tls.use-tls",
                            "shortDescription": {
                                "text": "Found an HTTP server without TLS. Use 'http.ListenAndServeTLS' instead. See https://golang.org/pkg/net/http/#ListenAndServeTLS for more information."
                            },
                            "fullDescription": {
                                "text": "Found an HTTP server without TLS. Use 'http.ListenAndServeTLS' instead. See https://golang.org/pkg/net/http/#ListenAndServeTLS for more information."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-319: Cleartext Transmission of Sensitive Information",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
                            "name": "java.lang.security.audit.crlf-injection-logs.crlf-injection-logs",
                            "shortDescription": {
                                "text": "When data from an untrusted source is put into a logger and not neutralized correctly,\nan attacker could forge log entries or include malicious content.\n"
                            },
                            "fullDescription": {
                                "text": "When data from an untrusted source is put into a logger and not neutralized correctly,\nan attacker could forge log entries or include malicious content.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.secure-static-file-serve.avoid_send_file_without_path_sanitization",
                            "name": "python.flask.security.secure-static-file-serve.avoid_send_file_without_path_sanitization",
                            "shortDescription": {
                                "text": "Looks like `filename` could flow to `flask.send_file()` function. Make sure to properly sanitize filename or use `flask.send_from_directory`"
                            },
                            "fullDescription": {
                                "text": "Looks like `filename` could flow to `flask.send_file()` function. Make sure to properly sanitize filename or use `flask.send_from_directory`"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-73: External Control of File Name or Path",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "typescript.react.security.react-controlled-component-password.react-controlled-component-password",
                            "name": "typescript.react.security.react-controlled-component-password.react-controlled-component-password",
                            "shortDescription": {
                                "text": "Password can be leaked if CSS injection exists on the page.\n"
                            },
                            "fullDescription": {
                                "text": "Password can be leaked if CSS injection exists on the page.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.cryptography.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
                            "name": "python.cryptography.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
                            "shortDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.insecure-smtp-connection.insecure-smtp-connection",
                            "name": "java.lang.security.audit.insecure-smtp-connection.insecure-smtp-connection",
                            "shortDescription": {
                                "text": "Insecure SMTP connection detected. This connection will trust any SSL certificate.\nEnable certificate verification by setting 'email.setSSLCheckServerIdentity(true)'.\n"
                            },
                            "fullDescription": {
                                "text": "Insecure SMTP connection detected. This connection will trust any SSL certificate.\nEnable certificate verification by setting 'email.setSSLCheckServerIdentity(true)'.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-297: Improper Validation of Certificate with Host Mismatch",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "name": "python.django.security.audit.csrf-exempt.no-csrf-exempt",
                            "shortDescription": {
                                "text": "There is rarely a good reason to use @csrf_exempt as is used for `$R`."
                            },
                            "fullDescription": {
                                "text": "There is rarely a good reason to use @csrf_exempt as is used for `$R`."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-352: Cross-Site Request Forgery (CSRF)",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.insecure-deserialization.insecure-deserialization",
                            "name": "python.flask.security.insecure-deserialization.insecure-deserialization",
                            "shortDescription": {
                                "text": "Detected the use of an insecure deserizliation library in a Flask route. These libraries\nare prone to code execution vulnerabilities. Ensure user data does not enter this function.\nTo fix this, try to avoid serializing whole objects. Consider instead using a serializer\nsuch as JSON.\n"
                            },
                            "fullDescription": {
                                "text": "Detected the use of an insecure deserizliation library in a Flask route. These libraries\nare prone to code execution vulnerabilities. Ensure user data does not enter this function.\nTo fix this, try to avoid serializing whole objects. Consider instead using a serializer\nsuch as JSON.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "javascript.express.security.audit.possible-user-input-redirect.unknown-value-in-redirect",
                            "name": "javascript.express.security.audit.possible-user-input-redirect.unknown-value-in-redirect",
                            "shortDescription": {
                                "text": "It looks like '$UNK' is read from user input and it is used to as a redirect. Ensure\n'$UNK' is not externally controlled, otherwise this is an open redirect.\n"
                            },
                            "fullDescription": {
                                "text": "It looks like '$UNK' is read from user input and it is used to as a redirect. Ensure\n'$UNK' is not externally controlled, otherwise this is an open redirect.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.lang.security.audit.conn_recv.multiprocessing-recv",
                            "name": "python.lang.security.audit.conn_recv.multiprocessing-recv",
                            "shortDescription": {
                                "text": "The Connection.recv() method automatically unpickles the data it receives, which can be a security risk unless you can trust the process which sent the message. Therefore, unless the connection object was produced using Pipe() you should only use the recv() and send() methods after performing some sort of authentication. See more dettails: https://docs.python.org/3/library/multiprocessing.html?highlight=security#multiprocessing.connection.Connection"
                            },
                            "fullDescription": {
                                "text": "The Connection.recv() method automatically unpickles the data it receives, which can be a security risk unless you can trust the process which sent the message. Therefore, unless the connection object was produced using Pipe() you should only use the recv() and send() methods after performing some sort of authentication. See more dettails: https://docs.python.org/3/library/multiprocessing.html?highlight=security#multiprocessing.connection.Connection"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.ssl-mode-no-verify.ssl-mode-no-verify",
                            "name": "ruby.lang.security.ssl-mode-no-verify.ssl-mode-no-verify",
                            "shortDescription": {
                                "text": "Detected SSL that will accept an unverified connection.\nThis makes the connections susceptible to man-in-the-middle attacks.\nUse 'OpenSSL::SSL::VERIFY_PEER' intead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected SSL that will accept an unverified connection.\nThis makes the connections susceptible to man-in-the-middle attacks.\nUse 'OpenSSL::SSL::VERIFY_PEER' intead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.cryptography.security.insecure-cipher-algorithms.insecure-cipher-algorithm-idea",
                            "name": "python.cryptography.security.insecure-cipher-algorithms.insecure-cipher-algorithm-idea",
                            "shortDescription": {
                                "text": "Detected IDEA cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected IDEA cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.boto3.security.hardcoded-token.hardcoded-token",
                            "name": "python.boto3.security.hardcoded-token.hardcoded-token",
                            "shortDescription": {
                                "text": "Hardcoded AWS access token detected. Use environment variables\nto access tokens (e.g., os.environ.get(...)) or use non version-controlled\nconfiguration files.\n"
                            },
                            "fullDescription": {
                                "text": "Hardcoded AWS access token detected. Use environment variables\nto access tokens (e.g., os.environ.get(...)) or use non version-controlled\nconfiguration files.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-798: Use of Hard-coded Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "typescript.react.security.react-insecure-request.react-insecure-request",
                            "name": "typescript.react.security.react-insecure-request.react-insecure-request",
                            "shortDescription": {
                                "text": "Unencrypted request over HTTP detected.\n"
                            },
                            "fullDescription": {
                                "text": "Unencrypted request over HTTP detected.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-319: Cleartext Transmission of Sensitive Information",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
                            "name": "java.lang.security.audit.cbc-padding-oracle.cbc-padding-oracle",
                            "shortDescription": {
                                "text": "Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor\ncould discern the difference between plaintext with valid or invalid padding. Further,\nCBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.\nUse 'AES/GCM/NoPadding' instead.\n"
                            },
                            "fullDescription": {
                                "text": "Using CBC with PKCS5Padding is susceptible to padding orcale attacks. A malicious actor\ncould discern the difference between plaintext with valid or invalid padding. Further,\nCBC mode does not include any integrity checks. See https://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY.\nUse 'AES/GCM/NoPadding' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-696: Incorrect Behavior Order",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.app-run-security-config.avoid_using_app_run_directly",
                            "name": "python.flask.security.audit.app-run-security-config.avoid_using_app_run_directly",
                            "shortDescription": {
                                "text": "top-level app.run(...) is ignored by flask. Consider putting app.run(...) behind a guard, like inside a function"
                            },
                            "fullDescription": {
                                "text": "top-level app.run(...) is ignored by flask. Consider putting app.run(...) behind a guard, like inside a function"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-668: Exposure of Resource to Wrong Sphere",
                                    "OWASP-A6: Security Misconfiguration"
                                ]
                            }
                        },
                        {
                            "id": "generic.dockerfile.security.last-user-is-root.last-user-is-root",
                            "name": "generic.dockerfile.security.last-user-is-root.last-user-is-root",
                            "shortDescription": {
                                "text": "The last user in the container is 'root'. This is a security hazard because if an attacker gains control of the container they will have root access. Switch back to another user after running commands as 'root'."
                            },
                            "fullDescription": {
                                "text": "The last user in the container is 'root'. This is a security hazard because if an attacker gains control of the container they will have root access. Switch back to another user after running commands as 'root'."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
                            "name": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
                            "shortDescription": {
                                "text": "Detected a potential path traversal. A malicious actor\ncould control the location of this file, to include going backwards\nin the directory with '../'. To address this, ensure that user-controlled\nvariables in file paths are sanitized. You may aslso consider using a utility\nmethod such as org.apache.commons.io.FilenameUtils.getName(...) to only\nretrieve the file name from the path.\n"
                            },
                            "fullDescription": {
                                "text": "Detected a potential path traversal. A malicious actor\ncould control the location of this file, to include going backwards\nin the directory with '../'. To address this, ensure that user-controlled\nvariables in file paths are sanitized. You may aslso consider using a utility\nmethod such as org.apache.commons.io.FilenameUtils.getName(...) to only\nretrieve the file name from the path.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.permissive-cors.permissive-cors",
                            "name": "java.lang.security.audit.permissive-cors.permissive-cors",
                            "shortDescription": {
                                "text": "https://find-sec-bugs.github.io/bugs.htm#PERMISSIVE_CORS\nPermissive CORS policy will allow a malicious application to communicate with the victim application in an inappropriate way, leading to spoofing, data theft, relay and other attacks.\n"
                            },
                            "fullDescription": {
                                "text": "https://find-sec-bugs.github.io/bugs.htm#PERMISSIVE_CORS\nPermissive CORS policy will allow a malicious application to communicate with the victim application in an inappropriate way, leading to spoofing, data theft, relay and other attacks.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "java.lang.security.audit.bad-hexa-conversion.bad-hexa-conversion",
                            "name": "java.lang.security.audit.bad-hexa-conversion.bad-hexa-conversion",
                            "shortDescription": {
                                "text": "'Integer.toHexString()' strips leading zeroes from each byte if read byte-by-byte.\nThis mistake weakens the hash value computed since it introduces more collisions.\nUse 'String.format(\"%02X\", ...)' instead.\n"
                            },
                            "fullDescription": {
                                "text": "'Integer.toHexString()' strips leading zeroes from each byte if read byte-by-byte.\nThis mistake weakens the hash value computed since it introduces more collisions.\nUse 'String.format(\"%02X\", ...)' instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-704: Incorrect Type Conversion or Cast",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.audit.custom-expression-as-sql.custom-expression-as-sql",
                            "name": "python.django.security.audit.custom-expression-as-sql.custom-expression-as-sql",
                            "shortDescription": {
                                "text": "Detected a Custom Expression ''$EXPRESSION'' calling ''as_sql(...).'' Ensure no user input enters this function because it is susceptible to SQL injection. See https://docs.djangoproject.com/en/3.0/ref/models/expressions/#django.db.models.Func.as_sql for more information."
                            },
                            "fullDescription": {
                                "text": "Detected a Custom Expression ''$EXPRESSION'' calling ''as_sql(...).'' Ensure no user input enters this function because it is susceptible to SQL injection. See https://docs.djangoproject.com/en/3.0/ref/models/expressions/#django.db.models.Func.as_sql for more information."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.django.security.injection.email.xss-html-email-body.xss-html-email-body",
                            "name": "python.django.security.injection.email.xss-html-email-body.xss-html-email-body",
                            "shortDescription": {
                                "text": "Found request data in an EmailMessage that is set to use HTML.\nThis is dangerous because HTML emails are susceptible to XSS.\nAn attacker could inject data into this HTML email, causing XSS.\n"
                            },
                            "fullDescription": {
                                "text": "Found request data in an EmailMessage that is set to use HTML.\nThis is dangerous because HTML emails are susceptible to XSS.\nAn attacker could inject data into this HTML email, causing XSS.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "java.lang.security.audit.el-injection.el-injection",
                            "name": "java.lang.security.audit.el-injection.el-injection",
                            "shortDescription": {
                                "text": "An expression is built with a dynamic value. The source of the value(s) should be verified to avoid that unfiltered values fall into this risky code evaluation.\n"
                            },
                            "fullDescription": {
                                "text": "An expression is built with a dynamic value. The source of the value(s) should be verified to avoid that unfiltered values fall into this risky code evaluation.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-94: Improper Control of Generation of Code ('Code Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-rc4",
                            "name": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-rc4",
                            "shortDescription": {
                                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression",
                            "name": "javascript.lang.security.detect-eval-with-expression.detect-eval-with-expression",
                            "shortDescription": {
                                "text": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n"
                            },
                            "fullDescription": {
                                "text": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.hardcoded-http-auth-in-controller.hardcoded-http-auth-in-controller",
                            "name": "ruby.lang.security.hardcoded-http-auth-in-controller.hardcoded-http-auth-in-controller",
                            "shortDescription": {
                                "text": "Detected hardcoded password used in basic authentication in a controller\nclass. Including this password in version control could expose this\ncredential. Consider refactoring to use environment variables or\nconfiguration files.\n"
                            },
                            "fullDescription": {
                                "text": "Detected hardcoded password used in basic authentication in a controller\nclass. Including this password in version control could expose this\ncredential. Consider refactoring to use environment variables or\nconfiguration files.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-798: Use of Hard-coded Credentials",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "ruby.lang.security.bad-deserialization.bad-deserialization",
                            "name": "ruby.lang.security.bad-deserialization.bad-deserialization",
                            "shortDescription": {
                                "text": "Checks for unsafe deserialization. Objects in Ruby can be serialized into strings,\nthen later loaded from strings. However, uses of load and object_load can cause remote code execution.\nLoading user input with YAML, MARSHAL, or CSV can potentially be dangerous. Use JSON securely instead.\n"
                            },
                            "fullDescription": {
                                "text": "Checks for unsafe deserialization. Objects in Ruby can be serialized into strings,\nthen later loaded from strings. However, uses of load and object_load can cause remote code execution.\nLoading user input with YAML, MARSHAL, or CSV can potentially be dangerous. Use JSON securely instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-xor",
                            "name": "python.pycryptodome.security.insecure-cipher-algorithm.insecure-cipher-algorithm-xor",
                            "shortDescription": {
                                "text": "Detected XOR cipher algorithm which is considered insecure. This algorithm\nis not cryptographically secure and can be reversed easily. Use AES instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected XOR cipher algorithm which is considered insecure. This algorithm\nis not cryptographically secure and can be reversed easily. Use AES instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.dynamic-proxy-scheme.dynamic-proxy-scheme",
                            "name": "generic.nginx.security.dynamic-proxy-scheme.dynamic-proxy-scheme",
                            "shortDescription": {
                                "text": "The protocol shceme for this proxy is dynamically determined. This can be dangerous if the scheme can be injected by an attacker because it may forcibly alter the connection scheme. Consider hardcoding a scheme for this proxy."
                            },
                            "fullDescription": {
                                "text": "The protocol shceme for this proxy is dynamically determined. This can be dangerous if the scheme can be injected by an attacker because it may forcibly alter the connection scheme. Consider hardcoding a scheme for this proxy."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.formatted-template-string.formatted-template-string",
                            "name": "go.lang.security.audit.net.formatted-template-string.formatted-template-string",
                            "shortDescription": {
                                "text": "Found a formatted template string passed to 'template.HTML()'.\n'template.HTML()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template. If user data\ncan reach this template, you may have a XSS vulnerability.\n"
                            },
                            "fullDescription": {
                                "text": "Found a formatted template string passed to 'template.HTML()'.\n'template.HTML()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template. If user data\ncan reach this template, you may have a XSS vulnerability.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "javascript.grpc.security.grpc-nodejs-insecure-connection.grpc-nodejs-insecure-connection",
                            "name": "javascript.grpc.security.grpc-nodejs-insecure-connection.grpc-nodejs-insecure-connection",
                            "shortDescription": {
                                "text": "Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker\ncould tamper with the gRPC message, which could compromise the machine.\n"
                            },
                            "fullDescription": {
                                "text": "Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker\ncould tamper with the gRPC message, which could compromise the machine.\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-502: Deserialization of Untrusted Data",
                                    "OWASP-A8: Insecure Deserialization"
                                ]
                            }
                        },
                        {
                            "id": "python.cryptography.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1",
                            "name": "python.cryptography.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1",
                            "shortDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "fullDescription": {
                                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                                    "OWASP-A3: Sensitive Data Exposure"
                                ]
                            }
                        },
                        {
                            "id": "python.flask.security.audit.render-template-string.render-template-string",
                            "name": "python.flask.security.audit.render-template-string.render-template-string",
                            "shortDescription": {
                                "text": "Found a template created with string formatting. This is susceptible to server-side template injection and cross-site scripting attacks."
                            },
                            "fullDescription": {
                                "text": "Found a template created with string formatting. This is susceptible to server-side template injection and cross-site scripting attacks."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "generic.nginx.security.alias-path-traversal.alias-path-traversal",
                            "name": "generic.nginx.security.alias-path-traversal.alias-path-traversal",
                            "shortDescription": {
                                "text": "The alias in this location block is subject to a path traversal because the location path does not end in a path separator (e.g., '/'). To fix, add a path separator to the end of the path."
                            },
                            "fullDescription": {
                                "text": "The alias in this location block is subject to a path traversal because the location path does not end in a path separator (e.g., '/'). To fix, add a path separator to the end of the path."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": []
                            }
                        },
                        {
                            "id": "javascript.jose.security.jwt-hardcode.hardcoded-jwt-secret",
                            "name": "javascript.jose.security.jwt-hardcode.hardcoded-jwt-secret",
                            "shortDescription": {
                                "text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"
                            },
                            "fullDescription": {
                                "text": "Hardcoded JWT secret or private key is used.\nThis is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html\nConsider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-522: Insufficiently Protected Credentials",
                                    "OWASP-A2: Broken Authentication"
                                ]
                            }
                        },
                        {
                            "id": "javascript.lang.security.detect-pseudorandombytes.detect-pseudoRandomBytes",
                            "name": "javascript.lang.security.detect-pseudorandombytes.detect-pseudoRandomBytes",
                            "shortDescription": {
                                "text": "Detected usage of crypto.pseudoRandomBytes, which does not produce secure random numbers.\n"
                            },
                            "fullDescription": {
                                "text": "Detected usage of crypto.pseudoRandomBytes, which does not produce secure random numbers.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
                                    "OWASP-A9: Using Components with Known Vulnerabilities"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.zip.path-traversal-inside-zip-extraction",
                            "name": "go.lang.security.zip.path-traversal-inside-zip-extraction",
                            "shortDescription": {
                                "text": "File traversal when extracting zip archive"
                            },
                            "fullDescription": {
                                "text": "File traversal when extracting zip archive"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.audit.net.unescaped-data-in-htmlattr.unescaped-data-in-htmlattr",
                            "name": "go.lang.security.audit.net.unescaped-data-in-htmlattr.unescaped-data-in-htmlattr",
                            "shortDescription": {
                                "text": "Found a formatted template string passed to 'template.HTMLAttr()'.\n'template.HTMLAttr()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template.\n"
                            },
                            "fullDescription": {
                                "text": "Found a formatted template string passed to 'template.HTMLAttr()'.\n'template.HTMLAttr()' does not escape contents. Be absolutely sure\nthere is no user-controlled data in this template.\n"
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "OWASP-A1: Injection"
                                ]
                            }
                        },
                        {
                            "id": "go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
                            "name": "go.lang.security.decompression_bomb.potential-dos-via-decompression-bomb",
                            "shortDescription": {
                                "text": "Detected a possible denial-of-service via a zip bomb attack. By limiting the max bytes read, you can mitigate this attack. `io.CopyN()` can specify a size. Refer to https://bomb.codes/ to learn more about this attack and other ways to mitigate it."
                            },
                            "fullDescription": {
                                "text": "Detected a possible denial-of-service via a zip bomb attack. By limiting the max bytes read, you can mitigate this attack. `io.CopyN()` can specify a size. Refer to https://bomb.codes/ to learn more about this attack and other ways to mitigate it."
                            },
                            "defaultConfiguration": {
                                "level": "warning"
                            },
                            "properties": {
                                "precision": "very-high",
                                "tags": [
                                    "CWE-400: Uncontrolled Resource Consumption"
                                ]
                            }
                        }
                    ]
                }
            },
            "results": [
                {
                    "ruleId": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
                    "message": {
                        "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "tests/payload/payload.py",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 5,
                                    "startColumn": 19,
                                    "endLine": 5,
                                    "endColumn": 37
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
                    "message": {
                        "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "tests/payload/payload.py",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 9,
                                    "startColumn": 34,
                                    "endLine": 9,
                                    "endColumn": 52
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
                    "message": {
                        "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "tests/payload/payload.py",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 9,
                                    "startColumn": 63,
                                    "endLine": 9,
                                    "endColumn": 82
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "python.lang.security.use-defused-xml.use-defused-xml",
                    "message": {
                        "text": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE)\nattacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'.\nSee https://github.com/tiran/defusedxml for more information.\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "tests/payload/payload.py",
                                    "uriBaseId": "%SRCROOT%"
                                },
                                "region": {
                                    "startLine": 1,
                                    "startColumn": 1,
                                    "endLine": 1,
                                    "endColumn": 15
                                }
                            }
                        }
                    ]
                }
            ],
            "invocations": [
                {
                    "toolExecutionNotifications": []
                }
            ]
        }
    ]
}